	.NEW 5

	.BYTE 5
	.BYTE FLAGS
	.WORD RELEASEID
	.WORD ENDLOD
	.WORD START
	.WORD VOCAB
	.WORD OBJECT
	.WORD GLOBAL
	.WORD IMPURE
	.WORD FLAGS2
	.BYTE 0,0,0,0,0,0
	.WORD WORDS
	.WORD 0,0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD TCHARS
	.WORD 0
	.WORD 0
	.WORD CHRSET
	.WORD EXTAB
	.WORD 0
	.WORD 0
	.WORD 0
	.WORD 0
	.INSERT "werner2_freq"
	.INSERT "werner2_data"

	.FUNCT GO
START::
	CRLF
	ICALL1 INIT-STATUS-LINE
	ICALL1 V-VERSION
	CRLF
	PUTP PLAYER,P?CAPACITY,50
	SET 'HERE,01-INSIDE-BARROW
	MOVE PLAYER,HERE
	ICALL QUEUE,I-EVERY-TURN,-1
	ICALL1 V-LOOK
	ICALL1 MAIN-LOOP
	QUIT

	.FUNCT CHKWORD?,W,PS,P1,F
	ASSIGNED? 'P1 /?L11
	SET 'P1,-1
?L11:	ZERO? W /FALSE
	GETB W,VOCAB-FL >F
	BTST F,PS \?L4
	LESS? P1,0 /TRUE
	BAND F,P1MASK >STACK
	EQUAL? STACK,P1 \?L8
	GETB W,VOCAB-V1 >F
	RETURN F
?L8:	GETB W,VOCAB-V2 >F
	RETURN F
?L4:	SET 'F,0
	RETURN F

	.FUNCT GETWORD?,N,R
	MUL N,2 >STACK
	DEC 'STACK
	GET LEXBUF,STACK >R
	RETURN R

	.FUNCT PRINT-WORD,N,I,MAX
	MUL N,4 >STACK
	INC 'STACK
	GETB LEXBUF,STACK >I
	MUL N,4 >STACK
	GETB LEXBUF,STACK >STACK
	ADD I,STACK >STACK
	SUB STACK,1 >MAX
?L1:	GETB READBUF,I >STACK
	PRINTC STACK
	IGRTR? 'I,MAX \?L1
	RTRUE

	.FUNCT CLEAR-NOUN-PHRASE,NP
	PUTB NP,0,0
	PUTB NP,1,0
	PUTB NP,6,0
	RTRUE

	.FUNCT COPY-NOUN-PHRASE,SRC,DEST,C
	GETB SRC,0 >C
	PUTB DEST,0,C
	MUL P-OBJSPEC-SIZE,C >STACK
	GET DEST,1 >STACK
	GET SRC,1 >STACK
	COPYT STACK,STACK,STACK
	GETB SRC,1 >C
	PUTB DEST,1,C
	MUL P-OBJSPEC-SIZE,C >STACK
	GET DEST,2 >STACK
	GET SRC,2 >STACK
	COPYT STACK,STACK,STACK
	GETB SRC,6 >STACK
	PUTB DEST,6,STACK
	RTRUE

	.FUNCT SAVE-PARSER-RESULT,DEST
	PUT DEST,0,P-V-WORD
	PUT DEST,1,P-P1
	PUT DEST,2,P-P2
	PUT DEST,3,P-SYNTAX
	GET DEST,4 >STACK
	COPYT P-PRSOS,STACK,102
	GET DEST,5 >STACK
	COPYT P-PRSIS,STACK,102
	PUT DEST,6,P-NUMBER
	GET DEST,8 >STACK
	ICALL COPY-LEXBUF,LEXBUF,STACK
	GET DEST,7 >STACK
	ICALL COPY-READBUF,READBUF,STACK
	PUT DEST,9,WINNER
	PUTB DEST,20,P-LEN
	PUTB DEST,21,P-V
	PUTB DEST,22,P-V-WORDN
	PUTB DEST,23,P-NOBJ
	ZERO? PRSO-DIR \?L2
	PUSH 0
	JUMP ?L1
?L2:	PUSH PRSO
?L1:	PUTB DEST,24,STACK
	PUTB DEST,25,PRSA
	RTRUE

	.FUNCT RESTORE-PARSER-RESULT,SRC,L,OW
	SET 'OW,WINNER
	GET SRC,0 >P-V-WORD
	GET SRC,1 >P-P1
	GET SRC,2 >P-P2
	GET SRC,3 >P-SYNTAX
	GET SRC,4 >STACK
	COPYT STACK,P-PRSOS,102
	GET SRC,5 >STACK
	COPYT STACK,P-PRSIS,102
	GET SRC,6 >P-NUMBER
	GET SRC,8 >STACK
	ICALL COPY-LEXBUF,STACK,LEXBUF
	GET SRC,7 >STACK
	ICALL COPY-READBUF,STACK,READBUF
	GET SRC,9 >WINNER
	GETB SRC,20 >P-LEN
	GETB SRC,21 >P-V
	GETB SRC,22 >P-V-WORDN
	GETB SRC,23 >P-NOBJ
	GETB SRC,24 >PRSO-DIR
	GETB SRC,25 >PRSA
	ZERO? PRSO-DIR /?L1
	SET 'PRSO,PRSO-DIR
	SET 'PRSO-DIR,1
	JUMP ?L6
?L1:	LESS? P-NOBJ,1 /?L4
	GETB P-PRSOS,0 >L
	ZERO? L \?L3
?L4:	SET 'PRSO,0
	JUMP ?L6
?L3:	EQUAL? L,1 \?L5
	GET P-PRSOS,1 >PRSO
	JUMP ?L6
?L5:	SET 'PRSO,MANY-OBJECTS
?L6:	LESS? P-NOBJ,2 /?L9
	GETB P-PRSIS,0 >L
	ZERO? L \?L7
?L9:	SET 'PRSI,0
	JUMP ?L11
?L7:	EQUAL? L,1 \?L10
	GET P-PRSIS,1 >PRSI
	JUMP ?L11
?L10:	SET 'PRSI,MANY-OBJECTS
?L11:	EQUAL? WINNER,OW,0 /FALSE
	LOC WINNER >HERE
	CALL1 SEARCH-FOR-LIGHT >HERE-LIT
	RETURN HERE-LIT

	.FUNCT HANDLE-ORPHAN-RESPONSE,CNT,MAX,TBL,O,OUT,NY,?TMP
	LESS? P-LEN,1 /?L3
	CALL2 GETWORD?,1 >STACK
	CALL2 STARTS-NOUN-PHRASE?,STACK >STACK
	ZERO? STACK \?L4
	CALL2 PARSE-NUMBER?,1 >STACK
	ZERO? STACK /?L3
?L4:	CALL PARSE-NOUN-PHRASE,1,P-NP-XOBJ,1 >?TMP
	ADD P-LEN,1 >STACK
	EQUAL? ?TMP,STACK /?L1
?L3:	RETURN O-RES-NOT-HANDLED
?L1:	EQUAL? PRSA,V?TELL \?L6
	SET 'P-CONT,P-O-CONT
	ZERO? P-CONT /?L6
	SET 'READBUF,CONT-READBUF
	SET 'LEXBUF,CONT-LEXBUF
?L6:	BTST P-O-REASON,P-OF-MISSING \?L11
	BTST P-O-REASON,P-OF-PRSI \?L13
	PUSH P-NP-IOBJ
	JUMP ?L15
?L13:	PUSH P-NP-DOBJ
?L15:	ICALL COPY-NOUN-PHRASE,P-NP-XOBJ,STACK
	RETURN O-RES-SET-NP
?L11:	BTST P-O-REASON,P-OF-PRSI \?L17
	SET 'TBL,P-PRSIS
	JUMP ?L19
?L17:	SET 'TBL,P-PRSOS
?L19:	GETB TBL,0 >MAX
	SET 'CNT,0
	SET 'OUT,P-XOBJS
	GETB P-NP-XOBJ,0 >NY
	SET '?TMP,1
?L20:	GET TBL,?TMP >O
	ZERO? NY /?L25
	GETB P-NP-XOBJ,0 >STACK
	GET P-NP-XOBJ,1 >STACK
	CALL ANY-SPEC-REFERS?,STACK,STACK,O >STACK
	ZERO? STACK /?L23
?L25:	GETB P-NP-XOBJ,1 >STACK
	GET P-NP-XOBJ,2 >STACK
	CALL ANY-SPEC-REFERS?,STACK,STACK,O >STACK
	ZERO? STACK \?L23
	INC 'CNT
	PUT OUT,CNT,O
?L23:	IGRTR? '?TMP,MAX \?L20
	PUTB OUT,0,CNT
	ZERO? CNT \?L27
	SET 'O,0
	JUMP ?L31
?L27:	EQUAL? CNT,1 \?L29
	GET OUT,1 >O
	JUMP ?L31
?L29:	GETB P-NP-XOBJ,6 >STACK
	EQUAL? STACK,MCM-ANY \?L30
	RANDOM CNT >STACK
	GET OUT,STACK >O
	PUT OUT,1,O
	PUTB OUT,0,1
	SET 'CNT,1
	PRINTI "["
	ICALL2 PRINT-DEF,O
	PRINTI "]"
	CRLF
	JUMP ?L31
?L30:	SET 'O,MANY-OBJECTS
?L31:	BTST P-O-REASON,P-OF-PRSI \?L32
	SET 'P-PRSIS,P-XOBJS
	SET 'PRSI,O
	JUMP ?L34
?L32:	SET 'P-PRSOS,P-XOBJS
	SET 'PRSO,O
?L34:	SET 'P-XOBJS,TBL
	ZERO? CNT \?L35
	PRINTI "That wasn't an option."
	PRINT TRY-REPHRASING-CMD
	CRLF
	SET 'P-CONT,0
	RETURN O-RES-FAILED
?L35:	EQUAL? CNT,1 /?L38
	GETB P-NP-XOBJ,6 >STACK
	EQUAL? STACK,MCM-ALL \?L37
?L38:	RETURN O-RES-SET-PRSTBL
?L37:	LESS? CNT,MAX \?L39
	PRINTI "That narrowed it down a little. "
	ICALL2 WHICH-DO-YOU-MEAN,OUT
	RETURN O-RES-REORPHANED
?L39:	PRINTI "That didn't narrow it down at all."
	PRINT TRY-REPHRASING-CMD
	CRLF
	SET 'P-CONT,0
	RETURN O-RES-FAILED

	.FUNCT REFERS-PSEUDO?,SPEC,PDO,NA,NN,AT,NT,A,N
	GET SPEC,0 >A
	GET SPEC,1 >N
	GETB PDO,0 >NA
	GETB PDO,1 >NN
	GET PDO,1 >AT
	GET PDO,2 >NT
	ZERO? A /?L1
	ZERO? N /?L10
	EQUAL? NA,1 \?L31
	EQUAL? A,AT /?L5
	EQUAL? NA,1 /FALSE
?L31:	CALL IN-WTBL?,AT,NA,A >STACK
	ZERO? STACK /FALSE
?L5:	EQUAL? NN,1 \?L32
	EQUAL? N,NT /?L7
	EQUAL? NN,1 /FALSE
?L32:	CALL IN-WTBL?,NT,NN,N >STACK
	ZERO? STACK /FALSE
?L7:	RETURN 3
?L1:	ZERO? N /?L10
	EQUAL? NN,1 \?L33
	EQUAL? N,NT /?L13
	EQUAL? NN,1 /?L11
?L33:	CALL IN-WTBL?,NT,NN,N >STACK
	ZERO? STACK /?L11
?L13:	RETURN 2
?L11:	CALL CHKWORD?,N,PS?ADJECTIVE >STACK
	ZERO? STACK /FALSE
	SET 'A,N
	PUSH A
	ZERO? STACK /FALSE
	EQUAL? NA,1 \?L34
	EQUAL? A,AT /TRUE
	EQUAL? NA,1 /FALSE
?L34:	CALL IN-WTBL?,AT,NA,A >STACK
	ZERO? STACK /FALSE
	RTRUE
?L10:	ZERO? A /FALSE
	EQUAL? NA,1 \?L35
	EQUAL? A,AT /TRUE
	EQUAL? NA,1 /FALSE
?L35:	CALL IN-WTBL?,AT,NA,A >STACK
	ZERO? STACK /FALSE
	RTRUE

	.FUNCT MATCH-PSEUDO,SPEC,PT,CNT
	GET PT,0 >CNT
	ADD PT,2 >PT
?L1:	DLESS? 'CNT,0 /FALSE
	CALL REFERS-PSEUDO?,SPEC,PT >STACK
	ZERO? STACK /?L5
	RETURN PT
?L5:	ADD PT,PDO-SIZE >PT
	JUMP ?L1

	.FUNCT MAKE-PSEUDO,PDO
	GET PDO,3 >STACK
	PUTP PSEUDO-OBJECT,P?ACTION,STACK
	SET 'PSEUDO-LOC,HERE
	RETURN PSEUDO-OBJECT

	.FUNCT THIS-IS-IT,O
	PUTB P-XOBJS,0,1
	PUT P-XOBJS,1,O
	CALL SET-PRONOUNS,O,P-XOBJS >STACK
	RSTACK

	.FUNCT CONTENTS-ARE-IT,CTNR,FILTER,N,I
	FIRST? CTNR >I \?L3
?L1:	ZERO? FILTER /?L6
	CALL2 FILTER,I >STACK
	ZERO? STACK /?L7
?L6:	INC 'N
	PUT P-XOBJS,N,I
	EQUAL? N,P-MAX-OBJECTS /?L3
?L7:	NEXT? I >I /?L1
?L3:	PUTB P-XOBJS,0,N
	ZERO? N /TRUE
	EQUAL? N,1 \?L13
	GET P-XOBJS,1 >N
	JUMP ?L14
?L13:	SET 'N,MANY-OBJECTS
?L14:	CALL SET-PRONOUNS,N,P-XOBJS >STACK
	RSTACK

	.FUNCT PRO-TRY-SET-IT,X,PRO?OBJS
	EQUAL? X,WINNER,MANY-OBJECTS /FALSE
	FSET? X,PERSONBIT /FALSE
	FSET? X,PLURALBIT /FALSE
	CALL2 PRO-FORCE-SET-IT,PRO?OBJS >STACK
	RSTACK

	.FUNCT PRO-FORCE-SET-IT,PRO?OBJS
	COPYT PRO?OBJS,P-PRO-IT-OBJS,102
	RTRUE

	.FUNCT PRO-TRY-SET-THEM,X,PRO?OBJS
	EQUAL? X,WINNER /FALSE
	EQUAL? X,MANY-OBJECTS /?L3
	FSET? X,PLURALBIT \FALSE
?L3:	CALL2 PRO-FORCE-SET-THEM,PRO?OBJS >STACK
	RSTACK

	.FUNCT PRO-FORCE-SET-THEM,PRO?OBJS
	COPYT PRO?OBJS,P-PRO-THEM-OBJS,102
	RTRUE

	.FUNCT PRO-TRY-SET-HIM,X,PRO?OBJS
	EQUAL? X,WINNER /FALSE
	FSET? X,PERSONBIT \FALSE
	FSET? X,FEMALEBIT /FALSE
	FSET? X,PLURALBIT /FALSE
	CALL2 PRO-FORCE-SET-HIM,PRO?OBJS >STACK
	RSTACK

	.FUNCT PRO-FORCE-SET-HIM,PRO?OBJS
	COPYT PRO?OBJS,P-PRO-HIM-OBJS,102
	RTRUE

	.FUNCT PRO-TRY-SET-HER,X,PRO?OBJS
	EQUAL? X,WINNER /FALSE
	FSET? X,PERSONBIT \FALSE
	FSET? X,FEMALEBIT \FALSE
	FSET? X,PLURALBIT /FALSE
	CALL2 PRO-FORCE-SET-HER,PRO?OBJS >STACK
	RSTACK

	.FUNCT PRO-FORCE-SET-HER,PRO?OBJS
	COPYT PRO?OBJS,P-PRO-HER-OBJS,102
	RTRUE

	.FUNCT SET-PRONOUNS,O,OBJS,PT,MAX,I
	EQUAL? O,0,ROOMS /FALSE
	GETPT O,P?PRONOUN >PT
	ZERO? PT /?L3
	PTSIZE PT >STACK
	DIV STACK,2 >STACK
	SUB STACK,1 >MAX
	SET 'I,0
?L4:	GET PT,I >STACK
	ICALL2 STACK,OBJS
	IGRTR? 'I,MAX \?L4
	RTRUE
?L3:	ICALL PRO-TRY-SET-IT,O,OBJS
	ICALL PRO-TRY-SET-THEM,O,OBJS
	ICALL PRO-TRY-SET-HIM,O,OBJS
	CALL PRO-TRY-SET-HER,O,OBJS >STACK
	RSTACK

	.FUNCT EXPAND-PRONOUN,W,OBJS,CNT
	EQUAL? W,W?IT \?L1
	COPYT P-PRO-IT-OBJS,OBJS,102
	JUMP ?L6
?L1:	EQUAL? W,W?THEM \?L3
	COPYT P-PRO-THEM-OBJS,OBJS,102
	JUMP ?L6
?L3:	EQUAL? W,W?HIM \?L4
	COPYT P-PRO-HIM-OBJS,OBJS,102
	JUMP ?L6
?L4:	EQUAL? W,W?HER \FALSE
	COPYT P-PRO-HER-OBJS,OBJS,102
?L6:	GETB OBJS,0 >CNT
	ZERO? CNT \?L7
	PRINTI "You haven't seen any """
	PRINTB W
	PRINTI """ yet."
	CRLF
	RETURN EXPAND-PRONOUN-FAILED
?L7:	CALL2 STILL-VISIBLE-CHECK,OBJS >STACK
	ZERO? STACK \?L10
	RETURN EXPAND-PRONOUN-FAILED
?L10:	EQUAL? CNT,1 \?L13
	GET OBJS,1 >STACK
	RSTACK
?L13:	RETURN MANY-OBJECTS

	.FUNCT V-PRONOUNS
	PRINTI "IT means "
	ICALL LIST-OBJECTS,P-PRO-IT-OBJS,0,152
	PRINTI "."
	CRLF
	PRINTI "THEM means "
	ICALL LIST-OBJECTS,P-PRO-THEM-OBJS,0,152
	PRINTI "."
	CRLF
	PRINTI "HIM means "
	ICALL LIST-OBJECTS,P-PRO-HIM-OBJS,0,152
	PRINTI "."
	CRLF
	PRINTI "HER means "
	ICALL LIST-OBJECTS,P-PRO-HER-OBJS,0,152
	PRINTR "."

	.FUNCT MAIN-LOOP,?RESULT
?L1:	CALL1 PARSER >?RESULT
	ZERO? ?RESULT /?L1
	ICALL PERFORM,PRSA,PRSO,PRSI
	EQUAL? PRSA,V?QUIT,V?VERSION,V?WAIT /?L13
	EQUAL? PRSA,V?SAVE,V?RESTORE,V?RESTART /?L13
	EQUAL? PRSA,V?INVENTORY,V?UNDO,V?SUPERBRIEF /?L13
	EQUAL? PRSA,V?BRIEF,V?VERBOSE,V?AGAIN /?L13
	EQUAL? PRSA,V?SCRIPT,V?UNSCRIPT,V?PRONOUNS /?L13
	EQUAL? PRSA,V?TELL /?L13
	GETP HERE,P?ACTION >STACK
	ICALL2 STACK,M-END
	ICALL1 CLOCKER
?L13:	LOC WINNER >HERE
	JUMP ?L1

	.FUNCT STORE-OOPS,WN
	EQUAL? LEXBUF,EDIT-LEXBUF /?L1
	ICALL COPY-READBUF,READBUF,EDIT-READBUF
	ICALL COPY-LEXBUF,LEXBUF,EDIT-LEXBUF
?L1:	PUTB P-OOPS-DATA,5,P-CONT
	PUT P-OOPS-DATA,1,WINNER
	PUTB P-OOPS-DATA,4,WN
	RTRUE

	.FUNCT HANDLE-OOPS,N,W,WN,SS,SL,DS,DL,BL,MAX,DELTA,LBUF,RBUF,I
	SET 'LBUF,EDIT-LEXBUF
	SET 'RBUF,EDIT-READBUF
	CALL2 GETWORD?,N >W
	GETB P-OOPS-DATA,4 >WN
	MUL WN,2 >STACK
	DEC 'STACK
	PUT LBUF,STACK,W
	MUL N,4 >STACK
	INC 'STACK
	GETB LEXBUF,STACK >SS
	MUL N,4 >STACK
	GETB LEXBUF,STACK >SL
	MUL WN,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >DS
	MUL WN,4 >STACK
	GETB LBUF,STACK >DL
	MUL WN,4 >STACK
	PUTB LBUF,STACK,SL
	LESS? SL,DL \?L1
	ADD RBUF,DS >STACK
	ADD READBUF,SS >STACK
	COPYT STACK,STACK,SL
	ADD DS,DL >STACK
	SUB STACK,1 >MAX
	ADD SL,1 >I
?L3:	PUTB RBUF,I,32
	IGRTR? 'I,MAX \?L3
	JUMP ?L17
?L1:	GRTR? SL,DL \?L17
	CALL2 READBUF-LENGTH,RBUF >BL
	SUB SL,DL >DELTA
	ADD BL,DELTA >STACK
	LESS? STACK,READBUF-SIZE /?L7
	SUB READBUF-SIZE,DELTA >STACK
	SUB STACK,1 >BL
?L7:	SET 'I,BL
?L10:	GETB RBUF,I >STACK
	ADD I,DELTA >STACK
	PUTB RBUF,STACK,STACK
	DLESS? 'I,DS \?L10
	ADD RBUF,DS >STACK
	ADD READBUF,SS >STACK
	COPYT STACK,STACK,SL
	GETB LBUF,1 >MAX
	LESS? N,MAX \?L17
	ADD N,1 >I
?L15:	MUL I,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >STACK
	ADD STACK,DELTA >STACK
	MUL I,4 >STACK
	INC 'STACK
	PUTB LBUF,STACK,STACK
	IGRTR? 'I,MAX \?L15
?L17:	SET 'READBUF,RBUF
	SET 'LEXBUF,LBUF
	GET P-OOPS-DATA,0 >P-O-REASON
	GETB P-OOPS-DATA,5 >P-CONT
	GET P-OOPS-DATA,1 >WINNER
	PUTB P-OOPS-DATA,4,0
	PUTB P-OOPS-DATA,5,0
	PUT P-OOPS-DATA,0,0
	RTRUE

	.FUNCT REPLACE-HELD-WORD,N,NEW-WORD,S,OL,NL,BL,MAX,DELTA,LBUF,RBUF,I
	SET 'LBUF,EDIT-LEXBUF
	SET 'RBUF,EDIT-READBUF
	MUL N,2 >STACK
	DEC 'STACK
	PUT LBUF,STACK,NEW-WORD
	DIROUT 3,TEMPTABLE
	PRINTB NEW-WORD
	DIROUT -3
	MUL N,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >S
	MUL N,4 >STACK
	GETB LBUF,STACK >OL
	GET TEMPTABLE,0 >NL
	MUL N,4 >STACK
	PUTB LBUF,STACK,NL
	LESS? NL,OL \?L1
	ADD S,OL >STACK
	SUB STACK,1 >MAX
	ADD S,NL >STACK
	ADD STACK,1 >I
?L3:	PUTB RBUF,I,32
	IGRTR? 'I,MAX \?L3
	JUMP ?L17
?L1:	GRTR? NL,OL \?L17
	CALL2 READBUF-LENGTH,RBUF >BL
	SUB NL,OL >DELTA
	ADD BL,DELTA >STACK
	LESS? STACK,READBUF-SIZE /?L7
	SUB READBUF-SIZE,DELTA >STACK
	SUB STACK,1 >BL
?L7:	SET 'I,BL
?L10:	GETB RBUF,I >STACK
	ADD I,DELTA >STACK
	PUTB RBUF,STACK,STACK
	DLESS? 'I,S \?L10
	GETB LBUF,1 >MAX
	LESS? N,MAX \?L17
	ADD N,1 >I
?L15:	MUL I,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >STACK
	ADD STACK,DELTA >STACK
	MUL I,4 >STACK
	INC 'STACK
	PUTB LBUF,STACK,STACK
	IGRTR? 'I,MAX \?L15
?L17:	ADD RBUF,S >STACK
	COPYT TEMPTABLE+2,STACK,NL
	RTRUE

	.FUNCT INSERT-HELD-WORD,N,NEW-WORD,LBUF,RBUF,LEN,MIN,BL,S,MAX,NL,DELTA,I
	SET 'LBUF,EDIT-LEXBUF
	SET 'RBUF,EDIT-READBUF
	GETB LBUF,1 >LEN
	LESS? N,1 \?L1
	SET 'N,1
	JUMP ?L3
?L1:	GRTR? N,LEN \?L3
	ADD LEN,1 >N
?L3:	DIROUT 3,TEMPTABLE
	PRINTB NEW-WORD
	DIROUT -3
	GET TEMPTABLE,0 >NL
	EQUAL? LEN,LEXBUF-SIZE \?L5
	SET 'LEN,58
?L5:	GRTR? N,LEN /?L35
	MUL N,2 >MIN
	MUL LEN,2 >I
?L10:	GET LBUF,I >STACK
	ADD I,2 >STACK
	PUT LBUF,STACK,STACK
	SUB I,1 >STACK
	GET LBUF,STACK >STACK
	ADD I,1 >STACK
	PUT LBUF,STACK,STACK
	SUB I,2 >I
	LESS? I,MIN \?L10
	GRTR? N,LEN \?L14
?L35:	CALL2 READBUF-LENGTH,RBUF >STACK
	ADD STACK,1 >S
	JUMP ?L16
?L14:	MUL N,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >S
?L16:	MUL N,2 >STACK
	DEC 'STACK
	PUT LBUF,STACK,NEW-WORD
	MUL N,4 >STACK
	PUTB LBUF,STACK,NL
	MUL N,4 >STACK
	INC 'STACK
	PUTB LBUF,STACK,S
	ADD LEN,1 >STACK
	PUTB LBUF,1,STACK
	GRTR? N,LEN /?L29
	CALL2 READBUF-LENGTH,RBUF >BL
	ADD NL,1 >DELTA
	ADD BL,DELTA >STACK
	LESS? STACK,READBUF-SIZE /?L19
	SUB READBUF-SIZE,DELTA >STACK
	SUB STACK,1 >BL
?L19:	ADD BL,DELTA >STACK
	PUTB RBUF,1,STACK
	SET 'I,BL
?L22:	GETB RBUF,I >STACK
	ADD I,DELTA >STACK
	PUTB RBUF,STACK,STACK
	DLESS? 'I,S \?L22
	ADD LEN,1 >MAX
	LESS? N,MAX \?L29
	ADD N,1 >I
?L27:	MUL I,4 >STACK
	INC 'STACK
	GETB LBUF,STACK >STACK
	ADD STACK,DELTA >STACK
	MUL I,4 >STACK
	INC 'STACK
	PUTB LBUF,STACK,STACK
	IGRTR? 'I,MAX \?L27
?L29:	ADD RBUF,S >STACK
	COPYT TEMPTABLE+2,STACK,NL
	GRTR? N,LEN \?L32
	SUB S,1 >STACK
	JUMP ?L34
?L32:	ADD S,NL >STACK
?L34:	PUTB RBUF,STACK,32
	RTRUE

	.FUNCT NUMBER-F
	EQUAL? PRSA,V?EXAMINE \?L1
	PRINTN P-NUMBER
	PRINTI " is "
	ZERO? P-NUMBER \?L3
	PRINTI "zilch"
	JUMP ?L25
?L3:	EQUAL? P-NUMBER,1 \?L5
	PRINTI "the loneliest number that you'll ever do"
	JUMP ?L25
?L5:	EQUAL? P-NUMBER,2 \?L6
	PRINTI "the loneliest number since the number 1"
	JUMP ?L25
?L6:	EQUAL? P-NUMBER,3 \?L7
	PRINTI "a magic number"
	JUMP ?L25
?L7:	EQUAL? P-NUMBER,4 \?L8
	PRINTI "the only number that has the same number of characters as its value when written out in English"
	JUMP ?L25
?L8:	EQUAL? P-NUMBER,5 \?L9
	PRINTI "the only number that's part of more than one pair of twin primes"
	JUMP ?L25
?L9:	EQUAL? P-NUMBER,6 \?L10
	PRINTI "the smallest perfect number"
	JUMP ?L25
?L10:	EQUAL? P-NUMBER,7 \?L11
	PRINTI "a 1995 film directed by David Fincher"
	JUMP ?L25
?L11:	EQUAL? P-NUMBER,8 \?L12
	PRINTI "the first number that's neither prime nor semiprime"
	JUMP ?L25
?L12:	EQUAL? P-NUMBER,9 \?L13
	PRINTI "a 2009 animated film written and directed by Shane Acker"
	JUMP ?L25
?L13:	EQUAL? P-NUMBER,10 \?L14
	PRINTI "a 1979 film written, produced, and directed by Blake Edwards"
	JUMP ?L25
?L14:	EQUAL? P-NUMBER,42 \?L15
	PRINTI "the Answer to the Ultimate Question of Life, The Universe, and Everything"
	JUMP ?L25
?L15:	EQUAL? P-NUMBER,1729 \?L16
	PRINTI "a very interesting number; it is the smallest number expressible as the sum of two cubes in two different ways"
	JUMP ?L25
?L16:	EQUAL? P-NUMBER,12345 \?L17
	PRINTI "the combination on my luggage"
	JUMP ?L25
?L17:	EQUAL? P-NUMBER,-32768,32767 \?L18
	PRINTI "the "
	LESS? P-NUMBER,0 \?L19
	PRINTI "min"
	JUMP ?L21
?L19:	PRINTI "max"
?L21:	PRINTI "imum 16-bit signed integer"
	JUMP ?L25
?L18:	PRINTI "the number between "
	GRTR? P-NUMBER,0 \?L23
	SUB P-NUMBER,1 >STACK
	PRINTN STACK
	PRINTI " and "
	ADD P-NUMBER,1 >STACK
	PRINTN STACK
	JUMP ?L25
?L23:	ADD P-NUMBER,1 >STACK
	PRINTN STACK
	PRINTI " and "
	SUB P-NUMBER,1 >STACK
	PRINTN STACK
?L25:	PRINTR ", but that's not important right now."
?L1:	EQUAL? P-V-WORD,W?TAKE \FALSE
	EQUAL? P-NUMBER,5,10 \FALSE
	CALL2 PERFORM,V?WAIT >STACK
	RSTACK

	.FUNCT STARTS-NOUN-PHRASE?,W
	EQUAL? W,W?A,W?AN,W?THE /TRUE
	EQUAL? W,W?ALL,W?EVERY,W?EVERYTHING /TRUE
	EQUAL? W,W?ANY,W?ONE /TRUE
	CALL CHKWORD?,W,PS?ADJECTIVE >STACK
	ZERO? STACK \TRUE
	CALL CHKWORD?,W,PS?OBJECT >STACK
	ZERO? STACK \TRUE
	RFALSE

	.FUNCT MATCH-SYNTAX,PTR,CNT,S,BEST,BEST-SCORE
	SUB 255,P-V >STACK
	GET VERBS,STACK >PTR
	GETB PTR,0 >CNT
	INC 'PTR
	SET 'BEST-SCORE,-999
?L1:	DLESS? 'CNT,0 /?L2
	CALL2 MATCH-SYNTAX-LINE?,PTR >S
	ZERO? S /?L8
	GRTR? S,BEST-SCORE \?L8
	SET 'BEST-SCORE,S
	SET 'BEST,PTR
	GRTR? S,0 /?L2
?L8:	ADD PTR,SYN-REC-SIZE >PTR
	JUMP ?L1
?L2:	ZERO? BEST /?L12
	GETB BEST,SYN-ACTION >PRSA
	SET 'P-SYNTAX,BEST
	RTRUE
?L12:	PRINTI "I don't understand that sentence."
	CRLF
	RFALSE

	.FUNCT MATCH-SYNTAX-LINE?,PTR,NOBJ,PREP1,PREP2,R
	GETB PTR,SYN-NOBJ >NOBJ
	GETB PTR,SYN-PREP1 >PREP1
	GETB PTR,SYN-PREP2 >PREP2
	EQUAL? P-NOBJ,NOBJ \?L1
	EQUAL? P-P1,PREP1 \?L1
	EQUAL? P-P2,PREP2 /TRUE
?L1:	LESS? P-NOBJ,NOBJ \FALSE
	EQUAL? P-P1,PREP1,0 \FALSE
	EQUAL? P-P2,PREP2,0 \FALSE
	EQUAL? P-NOBJ,1 \?L6
	ZERO? PREP1 /?L6
	ZERO? P-P1 /FALSE
?L6:	LESS? NOBJ,1 /?L9
	ZERO? P-NOBJ \?L9
	ZERO? P-P1 \?L9
	ZERO? PREP1 /?L9
	GETB PTR,SYN-FIND1 >STACK
	EQUAL? STACK,KLUDGEBIT /FALSE
?L9:	EQUAL? NOBJ,2 \?L7
	ZERO? P-P2 \?L7
	ZERO? PREP2 /?L7
	GETB PTR,SYN-FIND2 >STACK
	EQUAL? STACK,KLUDGEBIT /FALSE
?L7:	SUB P-NOBJ,NOBJ >R
	ZERO? P-P1 \?L11
	ZERO? PREP1 /?L11
	SUB R,2 >R
?L11:	EQUAL? NOBJ,2 \?L14
	ZERO? P-P2 \?L14
	ZERO? PREP2 \?L14
	DEC 'R
?L14:	RETURN R

	.FUNCT INVENTORY-SCOPE-STAGE,INIT
	ZERO? INIT /?L1
	FIRST? WINNER >STACK /?L3
?L3:	PUT SCOPE-STATE,0,STACK
	PUT SCOPE-STATE,1,WINNER
	RTRUE
?L1:	CALL1 SCOPE-CRAWL >STACK
	RSTACK

	.FUNCT LOCATION-SCOPE-STAGE,INIT
	ZERO? INIT /?L1
	FIRST? HERE >STACK /?L3
?L3:	PUT SCOPE-STATE,0,STACK
	PUT SCOPE-STATE,1,HERE
	RTRUE
?L1:	CALL1 SCOPE-CRAWL >STACK
	RSTACK

	.FUNCT LOCAL-GLOBALS-SCOPE-STAGE,INIT,N
	ZERO? INIT /?L1
	FIRST? LOCAL-GLOBALS >STACK /?L3
?L3:	PUT SCOPE-STATE,0,STACK
	PUT SCOPE-STATE,1,LOCAL-GLOBALS
	RTRUE
?L1:	CALL1 SCOPE-CRAWL >N
	ZERO? N /FALSE
	CALL GLOBAL-IN?,N,HERE >STACK
	ZERO? STACK /?L1
	RETURN N

	.FUNCT GLOBALS-SCOPE-STAGE,INIT
	ZERO? INIT /?L1
	FIRST? GLOBAL-OBJECTS >STACK /?L3
?L3:	PUT SCOPE-STATE,0,STACK
	PUT SCOPE-STATE,1,GLOBAL-OBJECTS
	RTRUE
?L1:	CALL1 SCOPE-CRAWL >STACK
	RSTACK

	.FUNCT GENERIC-SCOPE-STAGE,INIT
	ZERO? INIT /?L1
	FIRST? GENERIC-OBJECTS >STACK /?L3
?L3:	PUT SCOPE-STATE,0,STACK
	PUT SCOPE-STATE,1,GENERIC-OBJECTS
	RTRUE
?L1:	CALL1 SCOPE-CRAWL >STACK
	RSTACK

	.FUNCT MAP-SCOPE-INIT-STAGES-FROM-BITS,BITS,CNT
	SET 'CNT,0
	EQUAL? -1,BITS \?L1
	PUT SCOPE-CURRENT-STAGES,0,SCOPE-CURRENT-STAGES-SIZE
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,INVENTORY-SCOPE-STAGE
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,LOCATION-SCOPE-STAGE
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,LOCAL-GLOBALS-SCOPE-STAGE
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,GLOBALS-SCOPE-STAGE
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,GENERIC-SCOPE-STAGE
	RTRUE
?L1:	BTST BITS,SF-HELD /?L8
	BTST BITS,SF-CARRIED \?L6
?L8:	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,INVENTORY-SCOPE-STAGE
?L6:	BTST BITS,SF-ON-GROUND /?L12
	BTST BITS,SF-IN-ROOM \?L10
?L12:	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,LOCATION-SCOPE-STAGE
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,GLOBALS-SCOPE-STAGE
	INC 'CNT
	PUT SCOPE-CURRENT-STAGES,CNT,LOCAL-GLOBALS-SCOPE-STAGE
?L10:	PUT SCOPE-CURRENT-STAGES,0,CNT
	RTRUE

	.FUNCT MAP-SCOPE-START,V,LEN,NEED-LIGHT
	SET 'NEED-LIGHT,0
	GET SCOPE-CURRENT-STAGES,0 >LEN
	ZERO? HERE-LIT \?L1
	BTST MAP-SCOPE-OPTIONS,MSO-NEED-LIGHT \?L1
	SET 'NEED-LIGHT,1
?L1:	ZERO? NEED-LIGHT /?L4
	SET 'MAP-SCOPE-STATUS,MS-NO-LIGHT
	JUMP ?L6
?L4:	SET 'MAP-SCOPE-STATUS,MS-FINISHED
?L6:	SET 'SCOPE-CURRENT-STAGE,0
?L7:	IGRTR? 'SCOPE-CURRENT-STAGE,LEN /FALSE
	ZERO? NEED-LIGHT /?L11
	CALL2 DARKNESS-F,M-SCOPE? >STACK
	ZERO? STACK /?L7
?L11:	GET SCOPE-CURRENT-STAGES,SCOPE-CURRENT-STAGE >STACK
	CALL2 STACK,1 >V
	ZERO? V /?L7
	EQUAL? V,-1 \TRUE
	RFALSE

	.FUNCT MAP-SCOPE-NEXT,S,N,LEN,INIT,NEED-LIGHT
	SET 'INIT,0
	SET 'NEED-LIGHT,0
	GET SCOPE-CURRENT-STAGES,0 >LEN
	ZERO? HERE-LIT \?L1
	BTST MAP-SCOPE-OPTIONS,MSO-NEED-LIGHT \?L1
	SET 'NEED-LIGHT,1
?L1:	GRTR? SCOPE-CURRENT-STAGE,LEN /FALSE
	ZERO? NEED-LIGHT /?L9
	CALL2 DARKNESS-F,M-SCOPE? >STACK
	ZERO? STACK /?L8
?L9:	GET SCOPE-CURRENT-STAGES,SCOPE-CURRENT-STAGE >S
	ZERO? S /?L8
	ZERO? INIT /?L10
	CALL2 S,1 >STACK
	ZERO? STACK /?L8
?L10:	CALL1 S >N
	ZERO? N /?L8
	EQUAL? N,-1 /FALSE
	RETURN N
?L8:	INC 'SCOPE-CURRENT-STAGE
	SET 'INIT,1
	JUMP ?L1

	.FUNCT SCOPE-CRAWL,O,N,C,L
	GET SCOPE-STATE,0 >O
	ZERO? O /FALSE
	GET SCOPE-STATE,1 >C
	FIRST? O >N \?L3
	CALL2 SEE-INSIDE?,O >STACK
	ZERO? STACK \?L8
?L3:	NEXT? O >N /?L8
	LOC O >L
?L7:	EQUAL? L,C,0 \?L9
	SET 'N,0
	JUMP ?L8
?L9:	NEXT? L >N /?L8
	LOC L >L
	JUMP ?L7
?L8:	PUT SCOPE-STATE,0,N
	RETURN O

	.FUNCT FIND-OBJECTS,KEEP,F,O,SNOBJ
	GETB P-SYNTAX,SYN-NOBJ >SNOBJ
	GETB P-SYNTAX,SYN-OPTS1 >O
	LESS? SNOBJ,1 \?L1
	SET 'PRSO,0
	JUMP ?L19
?L1:	LESS? KEEP,1 \?L19
	GETB P-SYNTAX,SYN-FIND1 >F
	LESS? P-NOBJ,1 \?L4
	GETB P-SYNTAX,SYN-PREP1 >STACK
	CALL GWIM,F,O,STACK >PRSO
	ZERO? PRSO \?L6
	ICALL1 WHAT-DO-YOU-WANT
	SET 'P-O-REASON,49152
	SET 'P-V-WORDN,0
	SET 'P-O-CONT,P-CONT
	RFALSE
?L6:	SET 'P-NOBJ,1
	PUT P-PRSOS,1,PRSO
	PUTB P-PRSOS,0,1
	JUMP ?L16
?L4:	GETB P-NP-DOBJ,0 >STACK
	EQUAL? STACK,1 /?L15
	SET 'PRSO,0
	JUMP ?L14
?L15:	GET P-NP-DOBJ,1 >STACK
	GET STACK,1 >STACK
	CALL EXPAND-PRONOUN,STACK,P-PRSOS >PRSO
?L14:	ZERO? PRSO \?L12
	MUL F,256 >STACK
	BOR STACK,O >STACK
	CALL MATCH-NOUN-PHRASE,P-NP-DOBJ,P-PRSOS,STACK >PRSO
?L12:	EQUAL? PRSO,EXPAND-PRONOUN-FAILED /FALSE
?L16:	ZERO? PRSO \?L53
	RFALSE
?L19:	ZERO? PRSO /?L23
?L53:	ZERO? PRSO-DIR \?L23
	CALL MANY-CHECK,PRSO,O,0 >STACK
	ZERO? STACK /FALSE
	CALL HAVE-TAKE-CHECK-TBL,P-PRSOS,O >STACK
	ZERO? STACK /FALSE
?L23:	GETB P-SYNTAX,SYN-OPTS2 >O
	LESS? SNOBJ,2 \?L27
	SET 'PRSI,0
	JUMP ?L45
?L27:	LESS? KEEP,2 \?L45
	GETB P-SYNTAX,SYN-FIND2 >F
	LESS? P-NOBJ,2 \?L30
	GETB P-SYNTAX,SYN-PREP2 >STACK
	CALL GWIM,F,O,STACK >PRSI
	ZERO? PRSI \?L32
	ICALL1 WHAT-DO-YOU-WANT
	SET 'P-O-REASON,57344
	SET 'P-V-WORDN,0
	SET 'P-O-CONT,P-CONT
	RFALSE
?L32:	SET 'P-NOBJ,2
	PUT P-PRSIS,1,PRSI
	PUTB P-PRSIS,0,1
	JUMP ?L42
?L30:	GETB P-NP-IOBJ,0 >STACK
	EQUAL? STACK,1 /?L41
	SET 'PRSI,0
	JUMP ?L40
?L41:	GET P-NP-IOBJ,1 >STACK
	GET STACK,1 >STACK
	CALL EXPAND-PRONOUN,STACK,P-PRSIS >PRSI
?L40:	ZERO? PRSI \?L38
	MUL F,256 >STACK
	BOR STACK,O >STACK
	CALL MATCH-NOUN-PHRASE,P-NP-IOBJ,P-PRSIS,STACK >PRSI
?L38:	EQUAL? PRSI,EXPAND-PRONOUN-FAILED /FALSE
?L42:	ZERO? PRSI \?L54
	RFALSE
?L45:	ZERO? PRSI /TRUE
?L54:	CALL MANY-CHECK,PRSI,O,1 >STACK
	ZERO? STACK /FALSE
	CALL HAVE-TAKE-CHECK-TBL,P-PRSIS,O >STACK
	ZERO? STACK \TRUE
	RFALSE

	.FUNCT WHAT-DO-YOU-WANT,SN,SP1,SP2,F
	GETB P-SYNTAX,SYN-NOBJ >SN
	GETB P-SYNTAX,SYN-PREP1 >SP1
	GETB P-SYNTAX,SYN-PREP2 >SP2
	ZERO? PRSO /?L1
	ZERO? PRSO-DIR \?L1
	GETB P-SYNTAX,SYN-FIND2 >F
	JUMP ?L3
?L1:	GETB P-SYNTAX,SYN-FIND1 >F
?L3:	EQUAL? PRSA,V?WALK \?L4
	ZERO? PRSO \?L4
	PRINTI "Which way"
	JUMP ?L7
?L4:	EQUAL? F,PERSONBIT \?L6
	PRINTI "Whom"
	JUMP ?L7
?L6:	PRINTI "What"
?L7:	PRINTI " do you want"
	EQUAL? WINNER,PLAYER /?L8
	PRINTI " "
	ICALL2 PRINT-DEF,WINNER
?L8:	PRINTI " to "
	ICALL1 PRINT-VERB
	ZERO? SP1 /?L11
	PRINTI " "
	CALL2 GET-PREP-WORD,SP1 >STACK
	PRINTB STACK
?L11:	ZERO? PRSO /?L16
	ZERO? PRSO-DIR \?L16
	PRINTI " "
	ICALL2 PRINT-DEF,PRSO
	ZERO? SP2 /?L16
	PRINTI " "
	CALL2 GET-PREP-WORD,SP2 >STACK
	PRINTB STACK
?L16:	PRINTR "?"

	.FUNCT PRINT-VERB
	ZERO? P-V-WORDN /?L1
	CALL2 PRINT-WORD,P-V-WORDN >STACK
	RSTACK
?L1:	PRINTB P-V-WORD
	RTRUE

	.FUNCT MANY-CHECK,OBJ,OPTS,INDIRECT?
	EQUAL? OBJ,MANY-OBJECTS \TRUE
	BTST OPTS,SF-MANY /TRUE
	EQUAL? PRSA,V?TELL \?L3
	PRINTI "You can only address one person at a time."
	JUMP ?L5
?L3:	PRINTI "You can't use multiple "
	ZERO? INDIRECT? /?L6
	PRINTI "in"
?L6:	PRINTI "direct objects with """
	ICALL1 PRINT-VERB
	PRINTI """."
?L5:	CRLF
	SET 'P-CONT,0
	RFALSE

	.FUNCT HAVE-TAKE-CHECK-TBL,TBL,OPTS,MAX,O,N,ORM,I
	GETB TBL,0 >MAX
	BTST OPTS,SF-TAKE \?L5
	SET 'I,1
?L3:	GET TBL,I >STACK
	CALL2 SHOULD-IMPLICIT-TAKE?,STACK >STACK
	ZERO? STACK /?L6
	PRINTI "[taking "
	CALL LIST-OBJECTS,TBL,SHOULD-IMPLICIT-TAKE?,24 >N
	PRINTI "]"
	CRLF
?L8:	GET TBL,I >O
	CALL2 SHOULD-IMPLICIT-TAKE?,O >STACK
	ZERO? STACK /?L12
	CALL TRY-TAKE,O,1 >STACK
	ZERO? STACK \?L12
	GRTR? N,1 \?L14
	SET 'ORM,REPORT-MODE
	SET 'REPORT-MODE,SHORT-REPORT
	PRINTD O
	PRINTI ": "
	ICALL2 TRY-TAKE,O
	SET 'REPORT-MODE,ORM
	RFALSE
?L14:	ICALL2 TRY-TAKE,O
	RFALSE
?L12:	IGRTR? 'I,MAX \?L8
	JUMP ?L5
?L6:	IGRTR? 'I,MAX \?L3
?L5:	BTST OPTS,SF-HAVE \TRUE
	SET 'I,1
?L26:	GET TBL,I >STACK
	CALL2 FAILS-HAVE-CHECK?,STACK >STACK
	ZERO? STACK /?L29
	PRINTI "You aren't holding "
	ICALL LIST-OBJECTS,TBL,FAILS-HAVE-CHECK?,56
	PRINTI "."
	CRLF
	SET 'P-CONT,0
	RFALSE
?L29:	IGRTR? 'I,MAX \?L26
	RTRUE

	.FUNCT HAVE-TAKE-CHECK,OBJ,OPTS
	BTST OPTS,SF-TAKE \?L5
	CALL2 SHOULD-IMPLICIT-TAKE?,OBJ >STACK
	ZERO? STACK /?L5
	PRINTI "[taking "
	ICALL2 PRINT-DEF,OBJ
	PRINTI "]"
	CRLF
	CALL TRY-TAKE,OBJ,1 >STACK
	ZERO? STACK \?L5
	ICALL2 TRY-TAKE,OBJ
	RFALSE
?L5:	BTST OPTS,SF-HAVE \TRUE
	CALL2 FAILS-HAVE-CHECK?,OBJ >STACK
	ZERO? STACK /TRUE
	PRINTI "You aren't holding "
	ICALL2 PRINT-DEF,OBJ
	PRINTI "."
	CRLF
	SET 'P-CONT,0
	RFALSE

	.FUNCT SHOULD-IMPLICIT-TAKE?,OBJ
	IN? OBJ,WINNER /FALSE
	FSET? OBJ,TAKEBIT \FALSE
	FSET? OBJ,TRYTAKEBIT \TRUE
	RFALSE

	.FUNCT FAILS-HAVE-CHECK?,OBJ
	CALL2 HELD?,OBJ >STACK
	ZERO? STACK /TRUE
	RFALSE

	.FUNCT STILL-VISIBLE-CHECK,TBL,CNT,I
	GETB TBL,0 >CNT
	ZERO? CNT /TRUE
	SET 'I,1
?L3:	GET TBL,I >STACK
	CALL2 VISIBLE?,STACK >STACK
	ZERO? STACK \?L6
	ICALL LIST-OBJECTS,TBL,NOT-VISIBLE?,90
	PRINTI " no longer here."
	CRLF
	SET 'P-CONT,0
	RFALSE
?L6:	IGRTR? 'I,CNT \?L3
	RTRUE

	.FUNCT NOT-VISIBLE?,O
	CALL2 VISIBLE?,O >STACK
	ZERO? STACK /TRUE
	RFALSE

	.FUNCT GWIM,BIT,OPTS,PREP,O,PW,I
	EQUAL? BIT,KLUDGEBIT \?L1
	RETURN ROOMS
?L1:	EQUAL? PRSA,V?WALK /FALSE
	ICALL2 MAP-SCOPE-INIT-STAGES-FROM-BITS,OPTS
	SET 'MAP-SCOPE-OPTIONS,MSO-NEED-LIGHT
	CALL1 MAP-SCOPE-START >STACK
	ZERO? STACK /?L11
?L7:	CALL1 MAP-SCOPE-NEXT >I
	ZERO? I /?L11
	EQUAL? I,WINNER /?L7
	ZERO? BIT /?L17
	FSET? I,BIT \?L7
?L17:	ZERO? O \FALSE
	SET 'O,I
	JUMP ?L7
?L11:	ZERO? O /FALSE
	PRINTI "["
	CALL2 GET-PREP-WORD,PREP >PW
	ZERO? PW /?L24
	PRINTB PW
	PRINTI " "
?L24:	ICALL2 PRINT-DEF,O
	PRINTI "]"
	CRLF
	RETURN O

	.FUNCT GET-PREP-WORD,PREP,MAX,I
	GET PREPOSITIONS,0 >STACK
	MUL STACK,2 >STACK
	SUB STACK,1 >MAX
	SET 'I,1
?L1:	ADD I,1 >STACK
	GET PREPOSITIONS,STACK >STACK
	EQUAL? STACK,PREP \?L4
	GET PREPOSITIONS,I >STACK
	RSTACK
?L4:	ADD I,2 >I
	GRTR? I,MAX \?L1
	RFALSE

	.FUNCT SEARCH-FOR-LIGHT,I
	FSET? HERE,LIGHTBIT /TRUE
	PUT SCOPE-CURRENT-STAGES,0,4
	PUT SCOPE-CURRENT-STAGES,1,LOCATION-SCOPE-STAGE
	PUT SCOPE-CURRENT-STAGES,2,INVENTORY-SCOPE-STAGE
	PUT SCOPE-CURRENT-STAGES,3,GLOBALS-SCOPE-STAGE
	PUT SCOPE-CURRENT-STAGES,4,LOCAL-GLOBALS-SCOPE-STAGE
	SET 'MAP-SCOPE-OPTIONS,0
	CALL1 MAP-SCOPE-START >STACK
	ZERO? STACK /FALSE
?L6:	CALL1 MAP-SCOPE-NEXT >I
	ZERO? I /FALSE
	FSET? I,LIGHTBIT \?L6
	RETURN I

	.FUNCT SEE-INSIDE?,OBJ
	FSET? OBJ,SURFACEBIT /TRUE
	FSET? OBJ,CONTBIT \FALSE
	FSET? OBJ,OPENBIT /TRUE
	FSET? OBJ,TRANSBIT /TRUE
	FSET? OBJ,OPENABLEBIT \TRUE
	RFALSE

	.FUNCT MATCH-NOUN-PHRASE,NP,OUT,BITS,F,NY,NN,SPEC,MODE?1,NOUT,OBITS,ONOUT,BEST,Q,I,I?1
	GETB NP,0 >NY
	GETB NP,1 >NN
	GETB NP,6 >MODE?1
	SET 'OBITS,BITS
	ZERO? MODE?1 \?L1
	BOR BITS,SF-HELD >STACK
	BOR STACK,SF-CARRIED >STACK
	BOR STACK,SF-ON-GROUND >STACK
	BOR STACK,SF-IN-ROOM >BITS
?L1:	SET 'NOUT,0
	ZERO? NY \?L6
	ICALL2 MAP-SCOPE-INIT-STAGES-FROM-BITS,BITS
	SET 'MAP-SCOPE-OPTIONS,MSO-NEED-LIGHT
	CALL1 MAP-SCOPE-START >STACK
	ZERO? STACK /?L27
?L10:	CALL1 MAP-SCOPE-NEXT >I
	ZERO? I /?L27
	GET SCOPE-CURRENT-STAGES,SCOPE-CURRENT-STAGE >STACK
	EQUAL? STACK,GENERIC-SCOPE-STAGE,GLOBALS-SCOPE-STAGE /?L10
	CALL2 ALL-INCLUDES?,I >STACK
	ZERO? STACK /?L10
	ZERO? NN /?L21
	GETB NP,1 >STACK
	GET NP,2 >STACK
	CALL ANY-SPEC-REFERS?,STACK,STACK,I >STACK
	ZERO? STACK \?L10
?L21:	LESS? NOUT,P-MAX-OBJECTS /?L22
	PRINTI "[too many objects!]"
	CRLF
	JUMP ?L27
?L22:	INC 'NOUT
	PUT OUT,NOUT,I
	JUMP ?L10
?L6:	SET 'I,1
?L25:	SUB I,1 >STACK
	MUL 4,STACK >STACK
	GET NP,1 >STACK
	ADD STACK,STACK >SPEC
	SET 'F,0
	SET 'ONOUT,NOUT
	SET 'BEST,1
	ICALL2 MAP-SCOPE-INIT-STAGES-FROM-BITS,BITS
	SET 'MAP-SCOPE-OPTIONS,MSO-NEED-LIGHT
	CALL1 MAP-SCOPE-START >STACK
	ZERO? STACK /?L34
?L30:	CALL1 MAP-SCOPE-NEXT >I?1
	ZERO? I?1 /?L34
	FSET? I?1,INVISIBLE /?L30
	CALL REFERS?,SPEC,I?1 >Q
	ZERO? Q /?L30
	LESS? Q,BEST /?L30
	SET 'F,1
	GRTR? Q,BEST \?L40
	SET 'NOUT,ONOUT
	SET 'BEST,Q
?L40:	ZERO? NN /?L43
	GETB NP,1 >STACK
	GET NP,2 >STACK
	CALL ANY-SPEC-REFERS?,STACK,STACK,I?1 >STACK
	ZERO? STACK \?L30
?L43:	LESS? NOUT,P-MAX-OBJECTS /?L45
	PRINTI "[too many objects!]"
	CRLF
	JUMP ?L34
?L45:	INC 'NOUT
	PUT OUT,NOUT,I?1
	JUMP ?L30
?L34:	ZERO? F \?L58
	BTST BITS,SF-ON-GROUND \?L55
	GETP HERE,P?THINGS >Q
	ZERO? Q /?L55
	CALL MATCH-PSEUDO,SPEC,Q >F
	ZERO? F /?L91
	ZERO? NN /?L52
	GETB NP,1 >STACK
	GET NP,2 >STACK
	CALL ANY-SPEC-REFERS-PSEUDO?,STACK,STACK,F >STACK
	ZERO? STACK \?L55
?L52:	LESS? NOUT,P-MAX-OBJECTS /?L54
	PRINTI "[too many objects!]"
	CRLF
	JUMP ?L27
?L54:	INC 'NOUT
	CALL2 MAKE-PSEUDO,F >STACK
	PUT OUT,NOUT,STACK
?L55:	ZERO? F \?L58
?L91:	EQUAL? BITS,-1 /?L60
	SET 'BITS,-1
	SET 'OBITS,-1
	JUMP ?L1
?L60:	EQUAL? MAP-SCOPE-STATUS,MS-NO-LIGHT \?L63
	PRINTI "It's too dark to see anything here."
	CRLF
	RFALSE
?L63:	PRINTI "You don't see that here."
	CRLF
	RFALSE
?L58:	LESS? NOUT,P-MAX-OBJECTS \?L27
	IGRTR? 'I,NY \?L25
?L27:	PUTB OUT,0,NOUT
	ZERO? NOUT \?L68
	BOR BITS,SF-HELD >STACK
	BOR STACK,SF-CARRIED >STACK
	BOR STACK,SF-ON-GROUND >STACK
	BOR STACK,SF-IN-ROOM >F
	EQUAL? BITS,F \?L70
	PRINTI "There are none at all available!"
	CRLF
	RFALSE
?L70:	SET 'BITS,F
	SET 'OBITS,F
	JUMP ?L1
?L68:	EQUAL? NOUT,1 \?L73
	GET OUT,1 >STACK
	RSTACK
?L73:	EQUAL? MODE?1,MCM-ALL /?L75
	GRTR? NY,1 \?L74
?L75:	RETURN MANY-OBJECTS
?L74:	EQUAL? MODE?1,MCM-ANY \?L76
	RANDOM NOUT >STACK
	GET OUT,STACK >F
	PUT OUT,1,F
	PUTB OUT,0,1
	PRINTI "["
	ICALL2 PRINT-DEF,F
	PRINTI "]"
	CRLF
	RETURN F
?L76:	EQUAL? BITS,OBITS /?L78
	SET 'BITS,OBITS
	JUMP ?L1
?L78:	CALL2 APPLY-GENERIC-FCN,OUT >F
	ZERO? F /?L81
	PUT OUT,1,F
	PUTB OUT,0,1
	RETURN F
?L81:	ICALL2 WHICH-DO-YOU-MEAN,OUT
	EQUAL? NP,P-NP-DOBJ \?L84
	SET 'P-O-REASON,32768
	SET 'P-V-WORDN,0
	SET 'P-O-CONT,P-CONT
	RFALSE
?L84:	SET 'P-O-REASON,40960
	SET 'P-V-WORDN,0
	SET 'P-O-CONT,P-CONT
	RFALSE

	.FUNCT APPLY-GENERIC-FCN,TBL,MAX,F,R,I
	GETB TBL,0 >MAX
	SET 'I,1
?L1:	GET TBL,I >STACK
	GETP STACK,P?GENERIC >F
	CALL2 F,TBL >R
	ZERO? R /?L4
	RETURN R
?L4:	IGRTR? 'I,MAX \?L1
	RFALSE

	.FUNCT WHICH-DO-YOU-MEAN,TBL
	PRINTI "Which do you mean, "
	ICALL LIST-OBJECTS,TBL,0,56
	PRINTR "?"

	.FUNCT ANY-SPEC-REFERS?,TBL,N,O,I
	ZERO? N /FALSE
	SET 'I,1
?L4:	CALL REFERS?,TBL,O >STACK
	ZERO? STACK \TRUE
	ADD TBL,P-OBJSPEC-SIZE >TBL
	IGRTR? 'I,N \?L4
	RFALSE

	.FUNCT ANY-SPEC-REFERS-PSEUDO?,TBL,N,PDO,I
	ZERO? N /FALSE
	SET 'I,1
?L4:	CALL REFERS-PSEUDO?,TBL,PDO >STACK
	ZERO? STACK \TRUE
	ADD TBL,P-OBJSPEC-SIZE >TBL
	IGRTR? 'I,N \?L4
	RFALSE

	.FUNCT GLOBAL-IN?,O,R
	FSET? O,INVISIBLE /FALSE
	CALL IN-PWTBL?,R,P?GLOBAL,O >STACK
	RSTACK

	.FUNCT REFERS?,SPEC,O,A,N
	GET SPEC,0 >A
	GET SPEC,1 >N
	ZERO? A /?L1
	ZERO? N /?L6
	CALL IN-PWTBL?,O,P?ADJECTIVE,A >STACK
	ZERO? STACK /FALSE
	CALL IN-PWTBL?,O,P?SYNONYM,N >STACK
	ZERO? STACK /FALSE
	RETURN 3
?L1:	ZERO? N /?L6
	CALL IN-PWTBL?,O,P?SYNONYM,N >STACK
	ZERO? STACK /?L7
	RETURN 2
?L7:	CALL CHKWORD?,N,PS?ADJECTIVE >STACK
	ZERO? STACK /FALSE
	SET 'A,N
	PUSH A
	ZERO? STACK /FALSE
	CALL IN-PWTBL?,O,P?ADJECTIVE,A >STACK
	ZERO? STACK /FALSE
	RTRUE
?L6:	ZERO? A /FALSE
	CALL IN-PWTBL?,O,P?ADJECTIVE,A >STACK
	ZERO? STACK /FALSE
	RTRUE

	.FUNCT IN-PWTBL?,O,P,V,PT
	GETPT O,P >PT
	ZERO? PT /FALSE
	PTSIZE PT >STACK
	DIV STACK,2 >STACK
	CALL IN-WTBL?,PT,STACK,V >STACK
	RSTACK

	.FUNCT IN-PBTBL?,O,P,V,PT
	GETPT O,P >PT
	ZERO? PT /FALSE
	PTSIZE PT >STACK
	CALL IN-BTBL?,PT,STACK,V >STACK
	RSTACK

	.FUNCT IN-WTBL?,TBL,CNT,V
	INTBL? V,TBL,CNT >STACK /TRUE
	RFALSE

	.FUNCT IN-BTBL?,TBL,CNT,V
	INTBL? V,TBL,CNT,1 >STACK /TRUE
	RFALSE

	.FUNCT COPY-LEXBUF,SRC,DEST,WDS
	GETB SRC,1 >WDS
	PUTB DEST,1,WDS
	MUL 2,WDS >STACK
	MUL STACK,2 >STACK
	ADD DEST,2 >STACK
	ADD SRC,2 >STACK
	COPYT STACK,STACK,STACK
	RTRUE

	.FUNCT COPY-READBUF,SRC,DEST
	COPYT SRC,DEST,100
	RTRUE

	.FUNCT READBUF-LENGTH,TBL
	GETB TBL,1 >STACK
	RSTACK

	.FUNCT PERFORM,ACT,DOBJ,IOBJ,PRTN,RTN,OA,OD,ODD,OI,WON,CNT,ORM,I
	GET PREACTIONS,ACT >PRTN
	GET ACTIONS,ACT >RTN
	SET 'OA,PRSA
	SET 'OD,PRSO
	SET 'ODD,PRSO-DIR
	SET 'OI,PRSI
	SET 'ORM,REPORT-MODE
	SET 'PRSA,ACT
	SET 'PRSO,DOBJ
	EQUAL? ACT,V?WALK /?L1
	SET 'PRSO-DIR,0
?L1:	SET 'PRSI,IOBJ
	CALL2 COUNT-PRS-APPEARANCES,NUMBER >STACK
	GRTR? STACK,1 \?L3
	PRINTI "You can't use more than one number in a command."
	CRLF
	SET 'WON,0
	JUMP ?L16
?L3:	ZERO? PRSO-DIR \?L5
	EQUAL? PRSO,MANY-OBJECTS \?L5
	EQUAL? PRSI,MANY-OBJECTS \?L6
	PRINTI "You can't use multiple direct and indirect objects together."
	CRLF
	SET 'WON,0
	JUMP ?L16
?L6:	SET 'REPORT-MODE,SHORT-REPORT
	GETB P-PRSOS,0 >CNT
	SET 'I,1
?L9:	GET P-PRSOS,I >PRSO
	PRINTD PRSO
	PRINTI ": "
	CALL PERFORM-CALL-HANDLERS,PRTN,RTN >WON
	IGRTR? 'I,CNT \?L9
	JUMP ?L16
?L5:	EQUAL? PRSI,MANY-OBJECTS \?L12
	SET 'REPORT-MODE,SHORT-REPORT
	GETB P-PRSIS,0 >CNT
	SET 'I,1
?L13:	GET P-PRSIS,I >PRSI
	PRINTD PRSI
	PRINTI ": "
	CALL PERFORM-CALL-HANDLERS,PRTN,RTN >WON
	IGRTR? 'I,CNT \?L13
	JUMP ?L16
?L12:	CALL PERFORM-CALL-HANDLERS,PRTN,RTN >WON
?L16:	SET 'PRSA,OA
	SET 'PRSO,OD
	SET 'PRSO-DIR,ODD
	SET 'PRSI,OI
	SET 'REPORT-MODE,ORM
	RETURN WON

	.FUNCT COUNT-PRS-APPEARANCES,O,R,MAX,I
	EQUAL? PRSO,O \?L1
	INC 'R
	JUMP ?L6
?L1:	EQUAL? PRSO,MANY-OBJECTS \?L6
	GETB P-PRSOS,0 >MAX
	SET 'I,1
?L4:	GET P-PRSOS,I >STACK
	EQUAL? STACK,O \?L7
	INC 'R
?L7:	IGRTR? 'I,MAX \?L4
?L6:	EQUAL? PRSI,O \?L11
	INC 'R
	RETURN R
?L11:	EQUAL? PRSI,MANY-OBJECTS \?L16
	GETB P-PRSIS,0 >MAX
	SET 'I,1
?L14:	GET P-PRSIS,I >STACK
	EQUAL? STACK,O \?L17
	INC 'R
?L17:	IGRTR? 'I,MAX \?L14
?L16:	RETURN R

	.FUNCT PERFORM-CALL-HANDLERS,PRTN,RTN,AC,RM
	GETP WINNER,P?ACTION >AC
	ZERO? AC /?L1
	CALL2 AC,M-WINNER >STACK
	ZERO? STACK \TRUE
?L1:	LOC WINNER >RM
	ZERO? RM /?L3
	GETP RM,P?ACTION >AC
	ZERO? AC /?L3
	CALL2 AC,M-BEG >STACK
	ZERO? STACK \TRUE
?L3:	ZERO? PRTN /?L4
	CALL1 PRTN >STACK
	ZERO? STACK \TRUE
?L4:	ZERO? PRSI /?L6
	LOC PRSI >RM
	ZERO? RM /?L5
	GETP RM,P?CONTFCN >AC
	ZERO? AC /?L5
	CALL1 AC >STACK
	ZERO? STACK \TRUE
?L5:	ZERO? PRSI /?L6
	GETP PRSI,P?ACTION >AC
	ZERO? AC /?L6
	CALL1 AC >STACK
	ZERO? STACK \TRUE
?L6:	ZERO? PRSO /?L8
	ZERO? PRSO-DIR \?L7
	LOC PRSO >RM
	ZERO? RM /?L7
	GETP RM,P?CONTFCN >AC
	ZERO? AC /?L7
	CALL1 AC >STACK
	ZERO? STACK \TRUE
?L7:	ZERO? PRSO /?L8
	ZERO? PRSO-DIR \?L8
	GETP PRSO,P?ACTION >AC
	ZERO? AC /?L8
	CALL1 AC >STACK
	ZERO? STACK \TRUE
?L8:	CALL1 RTN >STACK
	RSTACK

	.FUNCT GOTO,RM,WAS-LIT,F,OWINNER
	SET 'OWINNER,0
	EQUAL? WINNER,PLAYER /?L1
	SET 'OWINNER,WINNER
	SET 'WINNER,PLAYER
?L1:	SET 'WAS-LIT,HERE-LIT
	SET 'HERE,RM
	MOVE WINNER,HERE
	GETP RM,P?ACTION >STACK
	ICALL2 STACK,M-ENTER
	CALL1 SEARCH-FOR-LIGHT >HERE-LIT
	ZERO? WAS-LIT \?L4
	ZERO? HERE-LIT /?L6
	CALL2 DARKNESS-F,M-DARK-TO-LIT >F
	JUMP ?L12
?L6:	CALL2 DARKNESS-F,M-DARK-TO-DARK >STACK
	ZERO? STACK \?L9
	CALL2 DARKNESS-F,M-LOOK >STACK
	ZERO? STACK /?L12
?L9:	SET 'F,1
	JUMP ?L12
?L4:	ZERO? HERE-LIT \?L12
	CALL2 DARKNESS-F,M-LIT-TO-DARK >STACK
	ZERO? STACK \?L13
	CALL2 DARKNESS-F,M-LOOK >STACK
	ZERO? STACK /?L12
?L13:	SET 'F,1
?L12:	ZERO? F \?L15
	CALL2 DESCRIBE-ROOM,HERE >STACK
	ZERO? STACK /?L15
	ICALL2 DESCRIBE-OBJECTS,HERE
?L15:	ZERO? HERE-LIT /?L18
	FSET HERE,TOUCHBIT
?L18:	ZERO? OWINNER /TRUE
	SET 'WINNER,OWINNER
	RTRUE

	.FUNCT FIND-IN,C,BIT,WORD,N,W,PT,MAX,I,I?1
	FIRST? C >I \?L3
?L1:	FSET? I,BIT \?L4
	INC 'N
	SET 'W,I
?L4:	NEXT? I >I /?L1
?L3:	ZERO? N \?L11
	GETPT C,P?GLOBAL >PT
	ZERO? PT /?L11
	PTSIZE PT >MAX
	DIV MAX,2 >MAX
	DEC 'MAX
	SET 'I,0
?L9:	GET PT,I >I?1
	FSET? I?1,BIT \?L14
	INC 'N
	SET 'W,I?1
?L14:	IGRTR? 'I,MAX \?L9
?L11:	EQUAL? N,1 \FALSE
	ZERO? WORD /?L20
	PRINTI "["
	PRINT WORD
	PRINTI " "
	ICALL2 PRINT-DEF,W
	PRINTI "]"
	CRLF
?L20:	RETURN W

	.FUNCT ITALICIZE,STR
	HLIGHT H-ITALIC
	PRINT STR
	HLIGHT H-NORMAL
	RTRUE

	.FUNCT PICK-ONE,TABL,LENGTH,CNT,OCNT,RND,MSG
	GET TABL,0 >LENGTH
	GET TABL,1 >CNT
	SUB LENGTH,CNT >STACK
	INC 'STACK
	RANDOM STACK >STACK
	ADD CNT,STACK >STACK
	SUB STACK,1 >RND
	GET TABL,RND >MSG
	SET 'OCNT,CNT
	IGRTR? 'CNT,LENGTH \?L1
	PUT TABL,1,2
	RETURN MSG
?L1:	EQUAL? RND,OCNT /?L4
	GET TABL,OCNT >STACK
	PUT TABL,RND,STACK
	PUT TABL,OCNT,MSG
?L4:	PUT TABL,1,CNT
	RETURN MSG

	.FUNCT PICK-ONE-R,TABL,RND
	GET TABL,0 >STACK
	DEC 'STACK
	INC 'STACK
	RANDOM STACK >STACK
	INC 'STACK
	SUB STACK,1 >RND
	GET TABL,RND >STACK
	RSTACK

	.FUNCT INIT-STATUS-LINE
	SPLIT 1
	CLEAR 1
	RTRUE

	.FUNCT FAKE-ERASE,I
	CURSET 1,1
	GETB 0,33 >I
?L1:	PRINTC 32
	DLESS? 'I,1 \?L1
	CURSET 1,1
	RTRUE

	.FUNCT ROB,VICTIM,DEST,DEST-IS-PERSON,I,N
	ZERO? DEST /?L1
	FSET? DEST,PERSONBIT \?L1
	SET 'DEST-IS-PERSON,1
?L1:	FIRST? VICTIM >I \TRUE
?L4:	NEXT? I >N /?L7
?L7:	ZERO? DEST-IS-PERSON \?L8
	FCLEAR I,WORNBIT
?L8:	ZERO? DEST \?L11
	REMOVE I
	JUMP ?L13
?L11:	MOVE I,DEST
?L13:	SET 'I,N
	ZERO? I \?L4
	RTRUE

	.FUNCT YES?,RESP
	PRINTI " (y/n) >"
?L1:	ICALL1 READLINE
	GETB READBUF,1 >STACK
	ZERO? STACK /?L3
	GETB READBUF,2 >RESP
	JUMP ?L5
?L3:	SET 'RESP,0
?L5:	EQUAL? RESP,89,121 /TRUE
	EQUAL? RESP,78,110 /FALSE
	PRINTI "(Please type y or n) >"
	JUMP ?L1

	.FUNCT VISIBLE?,OBJ,P,M
	EQUAL? OBJ,PSEUDO-OBJECT \?L1
	EQUAL? HERE,PSEUDO-LOC \FALSE
	RTRUE
?L1:	LOC OBJ >P
	ZERO? P /FALSE
	CALL2 META-LOC,OBJ >M
	EQUAL? M,HERE /?L15
	EQUAL? P,LOCAL-GLOBALS \?L14
	CALL GLOBAL-IN?,OBJ,HERE >STACK
	ZERO? STACK \TRUE
?L14:	EQUAL? P,GLOBAL-OBJECTS,GENERIC-OBJECTS \FALSE
	RTRUE
?L15:	EQUAL? P,HERE,WINNER /TRUE
	CALL2 SEE-INSIDE?,P >STACK
	ZERO? STACK /FALSE
	LOC P >P
	JUMP ?L15

	.FUNCT ACCESSIBLE?,OBJ,L
	LOC OBJ >L
	CALL2 META-LOC,OBJ >STACK
	EQUAL? STACK,HERE \FALSE
?L1:	FSET? L,CONTBIT \?L6
	FSET? L,OPENBIT /?L6
	FSET? L,SURFACEBIT \FALSE
?L6:	EQUAL? L,HERE,WINNER /TRUE
	LOC L >L
	JUMP ?L1

	.FUNCT HELD?,OBJ,HLDR
	ASSIGNED? 'HLDR /?L9
	SET 'HLDR,0
?L9:	ZERO? HLDR \?L1
	SET 'HLDR,WINNER
?L1:	ZERO? OBJ /FALSE
	LOC OBJ >STACK
	EQUAL? STACK,HLDR /TRUE
	LOC OBJ >OBJ
	JUMP ?L1

	.FUNCT META-LOC,OBJ
?L1:	LOC OBJ >OBJ
	ZERO? OBJ /FALSE
	IN? OBJ,ROOMS \?L1
	RETURN OBJ

	.FUNCT NOW-DARK?
	ZERO? HERE-LIT /FALSE
	CALL1 SEARCH-FOR-LIGHT >STACK
	ZERO? STACK \FALSE
	SET 'HERE-LIT,0
	CALL2 DARKNESS-F,M-NOW-DARK >STACK
	RSTACK

	.FUNCT NOW-LIT?,?TMP
	ZERO? HERE-LIT \FALSE
	CALL1 SEARCH-FOR-LIGHT >STACK
	ZERO? STACK /FALSE
	SET 'HERE-LIT,1
	FSET HERE,TOUCHBIT
	CALL2 DARKNESS-F,M-NOW-LIT >?TMP
	ZERO? ?TMP /?L4
	RETURN ?TMP
?L4:	CALL1 V-LOOK >STACK
	RSTACK

	.FUNCT QUEUE,IRTN,TURNZ
	ADD IQ-LENGTH,2 >IQ-LENGTH
	SUB IQ-LENGTH,1 >STACK
	PUT IQUEUE,STACK,IRTN
	PUT IQUEUE,IQ-LENGTH,TURNZ
	RTRUE

	.FUNCT DEQUEUE,IRTN,S
?L1:	ADD S,2 >S
	GRTR? S,IQ-LENGTH /TRUE
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	EQUAL? STACK,IRTN \?L1
	ICALL2 DEL-EVENT,S
	ICALL1 IQUEUE-CLEANUP
	RTRUE

	.FUNCT DEL-EVENT,IQPOS
	PUT IQUEUE,IQPOS,-9
	RTRUE

	.FUNCT IQUEUE-CLEANUP,S,Z
?L1:	ADD S,2 >S
	GRTR? S,IQ-LENGTH /TRUE
	GET IQUEUE,S >STACK
	EQUAL? STACK,-9 \?L1
	SET 'Z,S
?L6:	ADD Z,1 >STACK
	GET IQUEUE,STACK >STACK
	SUB Z,1 >STACK
	PUT IQUEUE,STACK,STACK
	ADD Z,2 >STACK
	GET IQUEUE,STACK >STACK
	PUT IQUEUE,Z,STACK
	EQUAL? Z,IQ-LENGTH \?L8
	SUB Z,1 >STACK
	PUT IQUEUE,STACK,0
	PUT IQUEUE,Z,0
	SUB IQ-LENGTH,2 >IQ-LENGTH
	SUB S,2 >S
	JUMP ?L1
?L8:	ADD Z,2 >Z
	JUMP ?L6

	.FUNCT RUNNING?,E,S
?L1:	ADD S,2 >S
	GRTR? S,IQ-LENGTH /FALSE
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	EQUAL? STACK,E \?L1
	GET IQUEUE,S >STACK
	EQUAL? STACK,1,-1 \?L1
	RTRUE

	.FUNCT CLOCKER,S,C,FIRED
	INC 'MOVES
?L1:	ADD S,2 >S
	GRTR? S,IQ-LENGTH \?L3
	EQUAL? C,1 \?L2
	ICALL1 IQUEUE-CLEANUP
	RETURN FIRED
?L3:	GET IQUEUE,S >STACK
	EQUAL? STACK,-1 \?L9
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	CALL1 STACK >STACK
	BOR FIRED,STACK >FIRED
?L9:	GET IQUEUE,S >STACK
	GRTR? STACK,0 \?L1
	GET IQUEUE,S >STACK
	DEC 'STACK
	PUT IQUEUE,S,STACK
	GET IQUEUE,S >STACK
	ZERO? STACK \?L1
	SUB S,1 >STACK
	GET IQUEUE,STACK >STACK
	CALL1 STACK >STACK
	BOR FIRED,STACK >FIRED
	ICALL2 DEL-EVENT,S
	SET 'C,1
	JUMP ?L1
?L2:	RETURN FIRED

	.FUNCT WAIT-TURNS,TURNS,T,INTERRUPT,ENDACT,BACKUP-WAIT
	SET 'BACKUP-WAIT,STANDARD-WAIT
	SET 'STANDARD-WAIT,TURNS
	SET 'T,1
?L1:	GETP HERE,P?ACTION >STACK
	CALL2 STACK,M-END >ENDACT
	CALL1 CLOCKER >INTERRUPT
	IGRTR? 'T,STANDARD-WAIT /?L5
	ZERO? ENDACT \?L5
	ZERO? INTERRUPT /?L1
?L5:	SET 'STANDARD-WAIT,BACKUP-WAIT
	RTRUE

	.FUNCT YOU-MASHER,WHOM
	PRINTI "I don't think "
	ZERO? WHOM /?L2
	PUSH WHOM
	JUMP ?L1
?L2:	PUSH PRSO
?L1:	ICALL2 PRINT-DEF,STACK
	PRINTR " would appreciate that."

	.FUNCT POINTLESS,VING,PREP,REV?,F,S
	ZERO? REV? /?L1
	SET 'F,PRSI
	SET 'S,PRSO
	JUMP ?L3
?L1:	SET 'F,PRSO
	SET 'S,PRSI
?L3:	PRINT VING
	ZERO? F /?L8
	PRINTC 32
	ICALL2 PRINT-DEF,F
	ZERO? PREP /?L8
	PRINTC 32
	PRINT PREP
	ZERO? S /?L8
	PRINTC 32
	ICALL2 PRINT-DEF,S
?L8:	PRINTR " doesn't seem like it will help."

	.FUNCT NOT-POSSIBLE,V
	SET 'P-CONT,0
	PRINTI "That's not something you can "
	PRINT V
	PRINTR "."

	.FUNCT RHETORICAL
	PRINTR "That was a rhetorical question."

	.FUNCT BE-SPECIFIC
	SET 'P-CONT,0
	PRINTR "You'll have to be more specific."

	.FUNCT SILLY
	SET 'P-CONT,0
	PRINTR "You must be joking."

	.FUNCT TSD
	SET 'P-CONT,0
	PRINTR "Not here, not now."

	.FUNCT PRE-REQUIRES-LIGHT
	ZERO? HERE-LIT \FALSE
	SET 'P-CONT,0
	PRINTR "It's too dark to see anything here."

	.FUNCT V-LOOK
	CALL DESCRIBE-ROOM,HERE,1 >STACK
	ZERO? STACK /FALSE
	CALL2 DESCRIBE-OBJECTS,HERE >STACK
	RSTACK

	.FUNCT DESCRIBE-ROOM,RM,LONG,P
	EQUAL? RM,HERE \?L1
	ZERO? HERE-LIT \?L1
	ICALL2 DARKNESS-F,M-LOOK
	RFALSE
?L1:	HLIGHT H-BOLD
	PRINTD RM
	CRLF
	HLIGHT H-NORMAL
	ZERO? LONG \?L8
	EQUAL? MODE,SUPERBRIEF /FALSE
	FSET? RM,TOUCHBIT \?L8
	EQUAL? MODE,VERBOSE /?L8
	GETP RM,P?ACTION >STACK
	ICALL2 STACK,M-FLASH
	RTRUE
?L8:	GETP RM,P?ACTION >STACK
	CALL2 STACK,M-LOOK >STACK
	ZERO? STACK \?L13
	GETP RM,P?LDESC >P
	ZERO? P /?L13
	PRINT P
	CRLF
?L13:	GETP RM,P?ACTION >STACK
	ICALL2 STACK,M-FLASH
	FSET RM,TOUCHBIT
	RTRUE

	.FUNCT DARKNESS-F,ARG
	EQUAL? ARG,M-LOOK \?L1
	PRINTR "It is pitch black. You can't see a thing."
?L1:	EQUAL? ARG,M-SCOPE? \?L3
	GET SCOPE-CURRENT-STAGES,SCOPE-CURRENT-STAGE >STACK
	EQUAL? STACK,GENERIC-SCOPE-STAGE,INVENTORY-SCOPE-STAGE,GLOBALS-SCOPE-STAGE \FALSE
	RTRUE
?L3:	EQUAL? ARG,M-NOW-DARK \?L6
	PRINTR "You are plunged into darkness."
?L6:	EQUAL? ARG,M-NOW-LIT \FALSE
	PRINTI "You can see your surroundings now."
	CRLF
	CRLF
	RFALSE

	.FUNCT DESCRIBE-OBJECTS,RM,P,N,I
	FIRST? RM >I \?L16
?L1:	FSET? I,NDESCBIT /?L10
	GETP I,P?DESCFCN >P
	ZERO? P /?L6
	CRLF
	ICALL2 P,M-OBJDESC
	ICALL2 THIS-IS-IT,I
	JUMP ?L10
?L6:	FSET? I,TOUCHBIT /?L9
	GETP I,P?FDESC >P
	ZERO? P \?L8
?L9:	GETP I,P?LDESC >P
	ZERO? P /?L10
?L8:	CRLF
	PRINT P
	CRLF
	ICALL2 THIS-IS-IT,I
	CALL2 SEE-INSIDE?,I >STACK
	ZERO? STACK /?L10
	FIRST? I >STACK \?L10
	ICALL2 DESCRIBE-CONTENTS,I
?L10:	NEXT? I >I /?L1
	FIRST? RM >I \?L16
?L14:	CALL2 GENERIC-DESC?,I >STACK
	ZERO? STACK /?L17
	SET 'N,1
	JUMP ?L16
?L17:	NEXT? I >I /?L14
?L16:	ZERO? N /?L20
	CRLF
	PRINTI "There "
	ICALL LIST-OBJECTS,RM,GENERIC-DESC?,L-ISMANY
	PRINTI " here."
	CRLF
	ICALL CONTENTS-ARE-IT,RM,GENERIC-DESC?
?L20:	FIRST? RM >I \?L25
?L23:	CALL2 SEE-INSIDE?,I >STACK
	ZERO? STACK /?L26
	CALL2 GENERIC-DESC?,I >STACK
	ZERO? STACK /?L26
	FIRST? I >STACK \?L26
	ICALL2 DESCRIBE-CONTENTS,I
?L26:	NEXT? I >I /?L23
?L25:	SET 'N,0
	FIRST? RM >I \?L31
?L29:	CALL2 NPC-DESC?,I >STACK
	ZERO? STACK /?L32
	SET 'N,1
	JUMP ?L31
?L32:	NEXT? I >I /?L29
?L31:	ZERO? N /FALSE
	CRLF
	ICALL LIST-OBJECTS,RM,NPC-DESC?,66
	PRINTI " here."
	CRLF
	CALL CONTENTS-ARE-IT,RM,NPC-DESC? >STACK
	RSTACK

	.FUNCT GENERIC-DESC?,OBJ,P
	EQUAL? OBJ,WINNER /FALSE
	FSET? OBJ,NDESCBIT /FALSE
	FSET? OBJ,PERSONBIT /FALSE
	FSET? OBJ,TOUCHBIT /?L3
	GETP OBJ,P?FDESC >STACK
	ZERO? STACK \FALSE
?L3:	GETP OBJ,P?LDESC >STACK
	ZERO? STACK \FALSE
	GETP OBJ,P?DESCFCN >P
	ZERO? P /TRUE
	CALL2 P,M-OBJDESC? >STACK
	ZERO? STACK /TRUE
	RFALSE

	.FUNCT NPC-DESC?,OBJ,P
	FSET? OBJ,PERSONBIT \FALSE
	EQUAL? OBJ,WINNER /FALSE
	FSET? OBJ,NDESCBIT /FALSE
	FSET? OBJ,TOUCHBIT /?L3
	GETP OBJ,P?FDESC >STACK
	ZERO? STACK \FALSE
?L3:	GETP OBJ,P?LDESC >STACK
	ZERO? STACK \FALSE
	GETP OBJ,P?DESCFCN >P
	ZERO? P /TRUE
	CALL2 P,M-OBJDESC? >STACK
	ZERO? STACK /TRUE
	RFALSE

	.FUNCT PRINT-CAP-STR,S,MAX,C,I,?TMP
	DIROUT 3,TEMPTABLE
	PRINT S
	DIROUT -3
	GET TEMPTABLE,0 >MAX
	ZERO? MAX /FALSE
	INC 'MAX
	SET 'I,2
?L3:	GETB TEMPTABLE,I >C
	EQUAL? I,2 \?L12
	SET '?TMP,C
	LESS? ?TMP,97 /?L10
	GRTR? ?TMP,122 /?L10
	SUB ?TMP,32 >C
	JUMP ?L12
?L10:	SET 'C,?TMP
?L12:	PRINTC C
	IGRTR? 'I,MAX \?L3
	RTRUE

	.FUNCT PRINT-CAP-OBJ,OBJ,MAX,C,I,?TMP
	DIROUT 3,TEMPTABLE
	PRINTD OBJ
	DIROUT -3
	GET TEMPTABLE,0 >MAX
	ZERO? MAX /FALSE
	INC 'MAX
	SET 'I,2
?L3:	GETB TEMPTABLE,I >C
	EQUAL? I,2 \?L12
	SET '?TMP,C
	LESS? ?TMP,97 /?L10
	GRTR? ?TMP,122 /?L10
	SUB ?TMP,32 >C
	JUMP ?L12
?L10:	SET 'C,?TMP
?L12:	PRINTC C
	IGRTR? 'I,MAX \?L3
	RTRUE

	.FUNCT PRINT-INDEF,OBJ,A
	FSET? OBJ,NARTICLEBIT /?L6
	GETP OBJ,P?ARTICLE >A
	ZERO? A /?L3
	PRINT A
	PRINTC 32
	JUMP ?L6
?L3:	FSET? OBJ,PLURALBIT \?L4
	PRINTI "some "
	JUMP ?L6
?L4:	FSET? OBJ,VOWELBIT \?L5
	PRINTI "an "
	JUMP ?L6
?L5:	PRINTI "a "
?L6:	PRINTD OBJ
	RTRUE

	.FUNCT PRINT-DEF,OBJ
	FSET? OBJ,NARTICLEBIT /?L1
	PRINTI "the "
?L1:	PRINTD OBJ
	RTRUE

	.FUNCT PRINT-CINDEF,OBJ,A
	FSET? OBJ,NARTICLEBIT \?L1
	ICALL2 PRINT-CAP-OBJ,OBJ
	RTRUE
?L1:	GETP OBJ,P?ARTICLE >A
	ZERO? A /?L4
	ICALL2 PRINT-CAP-STR,A
	PRINTC 32
	JUMP ?L8
?L4:	FSET? OBJ,PLURALBIT \?L6
	PRINTI "Some "
	JUMP ?L8
?L6:	FSET? OBJ,VOWELBIT \?L7
	PRINTI "An "
	JUMP ?L8
?L7:	PRINTI "A "
?L8:	PRINTD OBJ
	RTRUE

	.FUNCT PRINT-CDEF,OBJ
	FSET? OBJ,NARTICLEBIT \?L1
	ICALL2 PRINT-CAP-OBJ,OBJ
	RTRUE
?L1:	PRINTI "The "
	PRINTD OBJ
	RTRUE

	.FUNCT DESCRIBE-CONTENTS,OBJ
	FSET? OBJ,SURFACEBIT \?L1
	PRINTI "On"
	JUMP ?L3
?L1:	PRINTI "In"
?L3:	PRINTI " "
	ICALL2 PRINT-DEF,OBJ
	PRINTI " "
	ICALL LIST-OBJECTS,OBJ,0,L-ISARE
	PRINTI "."
	CRLF
	CALL2 CONTENTS-ARE-IT,OBJ >STACK
	RSTACK

	.FUNCT INV-DESCRIBE-CONTENTS,OBJ,N,F,I
	FSET? OBJ,SURFACEBIT \?L1
	PRINTI " (holding "
	JUMP ?L3
?L1:	PRINTI " (containing "
?L3:	FIRST? OBJ >F /?L5
	PRINTI "nothing)"
	RTRUE
?L5:	FIRST? OBJ >I \?L10
?L8:	INC 'N
	NEXT? I >I /?L8
?L10:	EQUAL? N,1 \?L11
	ICALL2 PRINT-INDEF,F
	JUMP ?L18
?L11:	EQUAL? N,2 \?L13
	ICALL2 PRINT-INDEF,F
	PRINTI " and "
	NEXT? F >STACK /?L14
?L14:	ICALL2 PRINT-INDEF,STACK
	JUMP ?L18
?L13:	FIRST? OBJ >I \?L18
?L16:	ICALL2 PRINT-INDEF,I
	DEC 'N
	ZERO? N /?L22
	EQUAL? N,1 \?L21
	PRINTI ", and "
	JUMP ?L22
?L21:	PRINTI ", "
?L22:	NEXT? I >I /?L16
?L18:	PRINTI ")"
	RTRUE

	.FUNCT LIST-OBJECTS,O,FILTER,FLAGS,N,F,S,MAX,J,I
	BTST FLAGS,L-CAP \?L1
	BOR FLAGS,L-SUFFIX >FLAGS
?L1:	BTST FLAGS,L-SUFFIX /?L6
	BTST FLAGS,L-ISMANY \?L4
?L6:	BOR FLAGS,L-ISARE >FLAGS
?L4:	BTST FLAGS,L-PRSTABLE \?L8
	GETB O,0 >MAX
	ZERO? MAX /?L27
	SET 'I,1
?L12:	GET O,I >J
	ZERO? FILTER /?L17
	CALL2 FILTER,J >STACK
	ZERO? STACK /?L15
?L17:	ZERO? F \?L18
	SET 'F,J
	JUMP ?L20
?L18:	ZERO? S \?L20
	SET 'S,J
?L20:	INC 'N
?L15:	IGRTR? 'I,MAX \?L12
	JUMP ?L27
?L8:	FIRST? O >I \?L27
?L25:	ZERO? FILTER /?L30
	CALL2 FILTER,I >STACK
	ZERO? STACK /?L28
?L30:	ZERO? F \?L31
	SET 'F,I
	JUMP ?L33
?L31:	ZERO? S \?L33
	SET 'S,I
?L33:	INC 'N
?L28:	NEXT? I >I /?L25
?L27:	ZERO? N \?L36
	BTST FLAGS,L-CAP \?L38
	PRINTI "Nothing is"
	RETURN N
?L38:	BTST FLAGS,L-SUFFIX \?L40
	PRINTI "nothing is"
	RETURN N
?L40:	BTST FLAGS,L-ISARE \?L41
	PRINTI "is nothing"
	RETURN N
?L41:	PRINTI "nothing"
	RETURN N
?L36:	EQUAL? N,1 \?L43
	BTST FLAGS,L-CAP \?L44
	ICALL LIST-OBJECTS-PRINT,F,FLAGS,1
	FSET? F,PLURALBIT \?L46
	PRINTI " are"
	RETURN N
?L46:	PRINTI " is"
	RETURN N
?L44:	BTST FLAGS,L-SUFFIX \?L49
	ICALL LIST-OBJECTS-PRINT,F,FLAGS,0
	FSET? F,PLURALBIT \?L50
	PRINTI " are"
	RETURN N
?L50:	PRINTI " is"
	RETURN N
?L49:	BTST FLAGS,L-ISARE \?L58
	FSET? F,PLURALBIT \?L56
	PRINTI "are "
	JUMP ?L58
?L56:	PRINTI "is "
?L58:	ICALL LIST-OBJECTS-PRINT,F,FLAGS,0
	RETURN N
?L43:	EQUAL? N,2 \?L59
	BTST FLAGS,L-ISARE \?L65
	BTST FLAGS,L-SUFFIX /?L65
	BTST FLAGS,L-ISMANY \?L64
	FSET? F,PLURALBIT \?L62
?L64:	PRINTI "are "
	JUMP ?L65
?L62:	PRINTI "is "
?L65:	BAND FLAGS,L-CAP >STACK
	ICALL LIST-OBJECTS-PRINT,F,FLAGS,STACK
	BTST FLAGS,L-OR \?L67
	PRINTI " or "
	JUMP ?L69
?L67:	PRINTI " and "
?L69:	ICALL LIST-OBJECTS-PRINT,S,FLAGS,0
	BTST FLAGS,L-SUFFIX \?L70
	PRINTI " are"
?L70:	RETURN N
?L59:	BTST FLAGS,L-ISARE \?L78
	BTST FLAGS,L-SUFFIX /?L78
	BTST FLAGS,L-ISMANY \?L77
	FSET? F,PLURALBIT \?L75
?L77:	PRINTI "are "
	JUMP ?L78
?L75:	PRINTI "is "
?L78:	BTST FLAGS,L-PRSTABLE \?L80
	SET 'I,1
?L82:	GET O,I >J
	ZERO? FILTER /?L87
	CALL2 FILTER,J >STACK
	ZERO? STACK /?L97
?L87:	BTST FLAGS,L-CAP \?L88
	EQUAL? I,1 \?L88
	ICALL LIST-OBJECTS-PRINT,J,FLAGS,1
	JUMP ?L90
?L88:	ICALL LIST-OBJECTS-PRINT,J,FLAGS,0
?L90:	DEC 'N
	ZERO? N /?L97
	EQUAL? N,1 \?L93
	BTST FLAGS,L-OR \?L94
	PRINTI ", or "
	JUMP ?L97
?L94:	PRINTI ", and "
	JUMP ?L97
?L93:	PRINTI ", "
?L97:	IGRTR? 'I,MAX \?L82
	JUMP ?L102
?L80:	FIRST? O >I \?L102
?L100:	ZERO? FILTER /?L105
	CALL2 FILTER,I >STACK
	ZERO? STACK /?L115
?L105:	BTST FLAGS,L-CAP \?L106
	EQUAL? I,F \?L106
	ICALL LIST-OBJECTS-PRINT,I,FLAGS,1
	JUMP ?L108
?L106:	ICALL LIST-OBJECTS-PRINT,I,FLAGS,0
?L108:	DEC 'N
	ZERO? N /?L115
	EQUAL? N,1 \?L111
	BTST FLAGS,L-OR \?L112
	PRINTI ", or "
	JUMP ?L115
?L112:	PRINTI ", and "
	JUMP ?L115
?L111:	PRINTI ", "
?L115:	NEXT? I >I /?L100
?L102:	BTST FLAGS,L-SUFFIX \?L117
	PRINTI " are"
?L117:	RETURN N

	.FUNCT LIST-OBJECTS-PRINT,O,FLAGS,CAP?
	EQUAL? O,PSEUDO-OBJECT \?L1
	BTST FLAGS,L-SCENERY \?L1
	ZERO? CAP? /?L3
	PRINTC 83
	JUMP ?L5
?L3:	PRINTC 115
?L5:	PRINTI "ome scenery"
	EQUAL? PSEUDO-LOC,HERE /TRUE
	PRINTI " in "
	PRINTD PSEUDO-LOC
	RTRUE
?L1:	ZERO? CAP? /?L9
	BTST FLAGS,L-THE \?L10
	ICALL2 PRINT-CDEF,O
	RTRUE
?L10:	ICALL2 PRINT-CINDEF,O
	RTRUE
?L9:	BTST FLAGS,L-THE \?L14
	ICALL2 PRINT-DEF,O
	RTRUE
?L14:	ICALL2 PRINT-INDEF,O
	RTRUE

	.FUNCT V-WALK,PT,PTS,RM,D
	ZERO? PRSO-DIR \?L1
	PRINTR "You must give a direction to walk in."
?L1:	GETPT HERE,PRSO >PT
	ZERO? PT \?L3
	ZERO? HERE-LIT \?L6
	CALL2 DARKNESS-F,M-DARK-CANT-GO >STACK
	ZERO? STACK \?L4
?L6:	PRINT CANT-GO-THAT-WAY
	CRLF
?L4:	SET 'P-CONT,0
	RTRUE
?L3:	PTSIZE PT >PTS
	EQUAL? PTS,UEXIT \?L8
	GET PT,EXIT-RM >RM
	JUMP ?L27
?L8:	EQUAL? PTS,NEXIT \?L9
	GET PT,NEXIT-MSG >STACK
	PRINT STACK
	CRLF
	SET 'P-CONT,0
	RTRUE
?L9:	EQUAL? PTS,FEXIT \?L10
	GET PT,FEXIT-RTN >STACK
	CALL1 STACK >RM
	ZERO? RM \?L27
	SET 'P-CONT,0
	RTRUE
?L10:	EQUAL? PTS,CEXIT \?L14
	GETB PT,CEXIT-VAR >STACK
	VALUE STACK >STACK
	ZERO? STACK /?L15
	GET PT,EXIT-RM >RM
	JUMP ?L27
?L15:	GET PT,CEXIT-MSG >RM
	ZERO? RM /?L18
	PRINT RM
	CRLF
	JUMP ?L21
?L18:	ZERO? HERE-LIT \?L20
	CALL2 DARKNESS-F,M-DARK-CANT-GO >STACK
	ZERO? STACK \?L21
?L20:	PRINT CANT-GO-THAT-WAY
	CRLF
?L21:	SET 'P-CONT,0
	RTRUE
?L14:	EQUAL? PTS,DEXIT \?L22
	GET PT,DEXIT-OBJ >D
	FSET? D,OPENBIT \?L23
	GET PT,EXIT-RM >RM
	JUMP ?L27
?L23:	GET PT,DEXIT-MSG >RM
	ZERO? RM /?L25
	PRINT RM
	CRLF
	SET 'P-CONT,0
	RTRUE
?L25:	ICALL2 THIS-IS-IT,D
	PRINTI "You'll have to open "
	ICALL2 PRINT-DEF,D
	PRINTI " first."
	CRLF
	SET 'P-CONT,0
	RTRUE
?L22:	PRINTI "Broken exit ("
	PRINTN PTS
	PRINTI ")."
	CRLF
	SET 'P-CONT,0
	RTRUE
?L27:	CALL2 GOTO,RM >STACK
	RSTACK

	.FUNCT V-ENTER
	FSET? PRSO,DOORBIT \?L1
	CALL2 DOOR-DIR,PRSO >STACK
	ICALL2 DO-WALK,STACK
	RTRUE
?L1:	ICALL2 NOT-POSSIBLE,STR?137
	RTRUE

	.FUNCT DO-WALK,DIR,ORIG?PRSO-DIR,?RESULT
	SET 'ORIG?PRSO-DIR,PRSO-DIR
	SET 'PRSO-DIR,1
	CALL PERFORM,V?WALK,DIR >?RESULT
	SET 'PRSO-DIR,ORIG?PRSO-DIR
	RETURN ?RESULT

	.FUNCT DOOR-DIR,DOOR,D,PT
	SET 'D,64
?L1:	DLESS? 'D,P?DOWN /FALSE
	GETPT HERE,D >PT
	ZERO? PT /?L1
	PTSIZE PT >STACK
	EQUAL? STACK,DEXIT \?L1
	GET PT,DEXIT-OBJ >STACK
	EQUAL? STACK,DOOR \?L1
	RETURN D

	.FUNCT OTHER-SIDE,DOOR,D
	CALL2 DOOR-DIR,DOOR >D
	ZERO? D /FALSE
	GETPT HERE,D >STACK
	GET STACK,EXIT-RM >STACK
	RSTACK

	.FUNCT V-EXAMINE,P,N
	SET 'N,0
	GETP PRSO,P?TEXT >P
	ZERO? P \?L3
	GETP PRSO,P?LDESC >P
	ZERO? P /?L1
?L3:	PRINT P
	CRLF
	SET 'N,1
?L1:	FSET? PRSO,OPENABLEBIT \?L5
	ICALL2 PRINT-CDEF,PRSO
	PRINTI " is "
	FSET? PRSO,OPENBIT \?L7
	PRINTI "open."
	JUMP ?L9
?L7:	PRINTI "closed."
?L9:	CRLF
	SET 'N,1
?L5:	FIRST? PRSO >STACK \?L11
	CALL2 SEE-INSIDE?,PRSO >STACK
	ZERO? STACK /?L11
	ICALL2 DESCRIBE-CONTENTS,PRSO
	SET 'N,1
?L11:	ZERO? N \FALSE
	PRINTI "You see nothing special about "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."

	.FUNCT V-LOOK-UNDER
	EQUAL? PRSO,WINNER /?L1
	FSET? PRSO,PERSONBIT \?L1
	ICALL1 YOU-MASHER
	RTRUE
?L1:	ZERO? HERE-LIT \?L3
	PRINTR "It's too dark."
?L3:	PRINTR "You can't see anything of interest."

	.FUNCT V-SEARCH
	EQUAL? PRSO,WINNER \?L1
	CALL2 PERFORM,V?INVENTORY >STACK
	RSTACK
?L1:	FSET? PRSO,PERSONBIT \?L3
	CALL1 YOU-MASHER >STACK
	RSTACK
?L3:	FSET? PRSO,CONTBIT /?L4
	CALL2 NOT-POSSIBLE,STR?138 >STACK
	RSTACK
?L4:	FSET? PRSO,OPENABLEBIT \?L5
	CALL2 SEE-INSIDE?,PRSO >STACK
	ZERO? STACK \?L5
	ICALL2 PRINT-CDEF,PRSO
	FSET? PRSO,PLURALBIT \?L6
	PUSH STR?139
	JUMP ?L8
?L6:	PUSH STR?140
?L8:	PRINT STACK
	PRINTR " closed."
?L5:	FIRST? PRSO >STACK /?L9
	ICALL2 PRINT-CDEF,PRSO
	FSET? PRSO,PLURALBIT \?L10
	PUSH STR?139
	JUMP ?L12
?L10:	PUSH STR?140
?L12:	PRINT STACK
	PRINTR " empty."
?L9:	CALL2 DESCRIBE-CONTENTS,PRSO >STACK
	RSTACK

	.FUNCT V-TAKE
	ICALL2 TRY-TAKE,PRSO
	RTRUE

	.FUNCT TRY-TAKE,OBJ,SILENT,HOLDER
	EQUAL? OBJ,WINNER \?L1
	ZERO? SILENT \FALSE
	EQUAL? P-V-WORD,W?GET \?L5
	PRINTI "Not quite."
	CRLF
	RFALSE
?L5:	EQUAL? P-V-WORD,W?TAKE,W?GRAB \?L6
	ICALL1 TSD
	RFALSE
?L6:	EQUAL? P-V-WORD,W?PICK \?L7
	PRINTI "You aren't my type."
	CRLF
	RFALSE
?L7:	ICALL1 SILLY
	RFALSE
?L1:	FSET? OBJ,PERSONBIT \?L9
	ZERO? SILENT \FALSE
	ICALL1 YOU-MASHER
	RFALSE
?L9:	FSET? OBJ,TAKEBIT /?L12
	ZERO? SILENT \FALSE
	ICALL2 NOT-POSSIBLE,STR?141
	RFALSE
?L12:	IN? OBJ,WINNER \?L15
	ZERO? SILENT \FALSE
	PRINTI "You already have that."
	CRLF
	RFALSE
?L15:	CALL TAKE-HOLDER,OBJ,WINNER >HOLDER
	ZERO? HOLDER /?L29
	FSET? HOLDER,PERSONBIT \?L21
	ZERO? SILENT \FALSE
	PRINTI "That seems to belong to "
	ICALL2 PRINT-DEF,HOLDER
	PRINTI "."
	CRLF
	RFALSE
?L21:	CALL2 BLOCKS-TAKE?,HOLDER >STACK
	ZERO? STACK /?L25
	ICALL2 THIS-IS-IT,HOLDER
	ZERO? SILENT \FALSE
	ICALL2 PRINT-CDEF,HOLDER
	PRINTI " is in the way."
	CRLF
	RFALSE
?L25:	CALL TAKE-CAPACITY-CHECK,OBJ,SILENT >STACK
	ZERO? STACK /?L29
	FSET? HOLDER,CONTBIT \?L29
	CALL HELD?,OBJ,HOLDER >STACK
	ZERO? STACK /?L29
	CALL HELD?,WINNER,HOLDER >STACK
	ZERO? STACK \?L29
	FSET OBJ,TOUCHBIT
	MOVE OBJ,WINNER
	ZERO? SILENT \TRUE
	EQUAL? REPORT-MODE,SHORT-REPORT \?L32
	PRINTR "Taken."
?L32:	PRINTI "You reach "
	CALL HELD?,WINNER,HOLDER >STACK
	ZERO? STACK /?L34
	PRINTI "out of "
	JUMP ?L36
?L34:	PRINTI "in "
?L36:	ICALL2 PRINT-DEF,HOLDER
	PRINTI " and "
	FSET? OBJ,WEARBIT \?L37
	PRINTI "wear "
	FSET OBJ,WORNBIT
	JUMP ?L39
?L37:	PRINTI "take "
?L39:	ICALL2 PRINT-DEF,OBJ
	PRINTR "."
?L29:	CALL TAKE-CAPACITY-CHECK,OBJ,SILENT >STACK
	ZERO? STACK /FALSE
	FSET? OBJ,WEARBIT \?L44
	FSET OBJ,WORNBIT
	MOVE OBJ,WINNER
	FSET OBJ,TOUCHBIT
	ZERO? SILENT \TRUE
	EQUAL? REPORT-MODE,SHORT-REPORT \?L47
	PRINTR "Taken (and worn)."
?L47:	PRINTI "You wear "
	ICALL2 PRINT-DEF,OBJ
	PRINTR "."
?L44:	FSET OBJ,TOUCHBIT
	MOVE OBJ,WINNER
	ZERO? SILENT \TRUE
	EQUAL? REPORT-MODE,SHORT-REPORT \?L52
	PRINTR "Taken."
?L52:	PRINTI "You pick up "
	ICALL2 PRINT-DEF,OBJ
	PRINTR "."

	.FUNCT TAKE-HOLDER,OBJ,TAKER,CEIL,BLOCKER,ALLOWER,HAD-ALLOWER?,L
	CALL COMMON-PARENT-R,OBJ,TAKER,HERE >CEIL
	ZERO? CEIL \?L1
	RETURN ROOMS
?L1:	EQUAL? OBJ,CEIL /?L8
	LOC OBJ >L
?L6:	EQUAL? L,0,CEIL /?L8
	CALL2 BLOCKS-TAKE?,L >STACK
	ZERO? STACK /?L11
	SET 'BLOCKER,L
	JUMP ?L15
?L11:	FSET? L,CONTBIT \?L14
	FSET? L,SURFACEBIT \?L13
?L14:	IN? L,ROOMS \?L15
?L13:	ZERO? ALLOWER \?L15
	SET 'ALLOWER,L
?L15:	LOC L >L
	JUMP ?L6
?L8:	SET 'HAD-ALLOWER?,ALLOWER
	EQUAL? TAKER,CEIL /?L23
	LOC TAKER >L
?L21:	EQUAL? L,0,CEIL /?L23
	CALL2 BLOCKS-TAKE?,L >STACK
	ZERO? STACK /?L26
	ZERO? BLOCKER \?L32
	SET 'BLOCKER,L
	JUMP ?L32
?L26:	FSET? L,CONTBIT \?L31
	FSET? L,SURFACEBIT \?L30
?L31:	IN? L,ROOMS \?L32
?L30:	ZERO? HAD-ALLOWER? \?L32
	SET 'ALLOWER,L
?L32:	LOC L >L
	JUMP ?L21
?L23:	ZERO? BLOCKER /?L37
	RETURN BLOCKER
?L37:	RETURN ALLOWER

	.FUNCT BLOCKS-TAKE?,OBJ
	FSET? OBJ,PERSONBIT /TRUE
	FSET? OBJ,CONTBIT \FALSE
	FSET? OBJ,OPENABLEBIT \FALSE
	FSET? OBJ,OPENBIT \TRUE
	RFALSE

	.FUNCT COMMON-PARENT-R,A,B,ROOT,N,F,R,I
	ZERO? ROOT /FALSE
	EQUAL? ROOT,A,B \?L3
	RETURN ROOT
?L3:	FIRST? ROOT >I \?L8
?L6:	CALL COMMON-PARENT-R,A,B,I >R
	ZERO? R /?L11
	SET 'F,R
	IGRTR? 'N,1 \?L11
	RETURN ROOT
?L11:	NEXT? I >I /?L6
?L8:	RETURN F

	.FUNCT TAKE-CAPACITY-CHECK,O,SILENT,CAP,CWT,NWT,?TMP
	GETP WINNER,P?CAPACITY >CAP
	LESS? CAP,0 /TRUE
	CALL2 WEIGHT,WINNER >?TMP
	GETP WINNER,P?SIZE >STACK
	SUB ?TMP,STACK >CWT
	CALL2 WEIGHT,O >NWT
	ADD CWT,NWT >STACK
	GRTR? STACK,CAP \TRUE
	ZERO? SILENT \FALSE
	EQUAL? REPORT-MODE,SHORT-REPORT \?L8
	PRINTI "You're carrying too much."
	CRLF
	RFALSE
?L8:	PRINTI "You're carrying too much to pick up "
	ICALL2 PRINT-DEF,O
	PRINTI "."
	CRLF
	RFALSE

	.FUNCT PRE-DROP
	IN? PRSO,WINNER /FALSE
	SET 'P-CONT,0
	PRINTR "You don't have that."

	.FUNCT V-DROP
	MOVE PRSO,HERE
	FSET PRSO,TOUCHBIT
	FCLEAR PRSO,WORNBIT
	EQUAL? REPORT-MODE,SHORT-REPORT \?L1
	PRINTR "Dropped."
?L1:	PRINTI "You drop "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."

	.FUNCT PRE-PUT-ON
	EQUAL? PRSI,WINNER \?L1
	ICALL PERFORM,V?WEAR,PRSO
	RTRUE
?L1:	EQUAL? PRSO,WINNER \?L3
	ICALL PERFORM,V?ENTER,PRSI
	RTRUE
?L3:	CALL HAVE-TAKE-CHECK,PRSO,SF-HAVE >STACK
	ZERO? STACK /TRUE
	RFALSE

	.FUNCT V-PUT-ON,S,CCAP,CSIZE,X,W,B
	FSET? PRSI,PERSONBIT \?L1
	ICALL2 YOU-MASHER,PRSI
	RTRUE
?L1:	FSET? PRSI,CONTBIT \?L4
	FSET? PRSI,SURFACEBIT /?L3
?L4:	ICALL2 NOT-POSSIBLE,STR?142
	RTRUE
?L3:	IN? PRSO,WINNER /?L5
	PRINTR "You don't have that."
?L5:	EQUAL? PRSO,PRSI /?L7
	CALL HELD?,PRSI,PRSO >STACK
	ZERO? STACK /?L6
?L7:	PRINTR "You can't put something on itself."
?L6:	GETP PRSO,P?SIZE >S
	GETP PRSI,P?CAPACITY >CCAP
	LESS? CCAP,0 \?L11
	SET 'CCAP,5
	SET 'B,1
?L11:	GETP PRSI,P?SIZE >CSIZE
	GRTR? S,CCAP /?L14
	GRTR? S,CSIZE \?L12
?L14:	PRINTI "That won't fit on "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."
?L12:	ZERO? B \?L18
	CALL2 CONTENTS-WEIGHT,PRSI >W
	ADD W,S >X
	GRTR? X,CCAP \?L18
	PRINTI "There's not enough room on "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."
?L18:	MOVE PRSO,PRSI
	FSET PRSO,TOUCHBIT
	FCLEAR PRSO,WORNBIT
	EQUAL? REPORT-MODE,SHORT-REPORT \?L22
	PRINTR "Done."
?L22:	PRINTI "You put "
	ICALL2 PRINT-DEF,PRSO
	PRINTI " on "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."

	.FUNCT PRE-PUT-IN
	EQUAL? PRSI,WINNER \?L1
	ICALL1 TSD
	RTRUE
?L1:	EQUAL? PRSO,WINNER \?L3
	ICALL PERFORM,V?ENTER,PRSI
	RTRUE
?L3:	CALL HAVE-TAKE-CHECK,PRSO,SF-HAVE >STACK
	ZERO? STACK /TRUE
	RFALSE

	.FUNCT V-PUT-IN,S,CCAP,CSIZE,X,W,B
	FSET? PRSI,PERSONBIT \?L1
	ICALL2 YOU-MASHER,PRSI
	RTRUE
?L1:	FSET? PRSI,CONTBIT \?L4
	FSET? PRSI,SURFACEBIT \?L3
?L4:	ICALL2 NOT-POSSIBLE,STR?143
	RTRUE
?L3:	FSET? PRSI,OPENBIT /?L6
	FSET? PRSI,OPENABLEBIT \?L5
	ICALL2 PRINT-CDEF,PRSI
	PRINTR " is closed."
?L5:	FSET? PRSI,OPENBIT /?L6
	FSET? PRSI,CONTBIT \?L6
	PRINTI "You see no way to put things into "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."
?L6:	IN? PRSO,WINNER /?L7
	PRINTR "You aren't holding that."
?L7:	EQUAL? PRSO,PRSI /?L9
	CALL HELD?,PRSI,PRSO >STACK
	ZERO? STACK /?L8
?L9:	PRINTR "You can't put something in itself."
?L8:	GETP PRSO,P?SIZE >S
	GETP PRSI,P?CAPACITY >CCAP
	LESS? CCAP,0 \?L13
	SET 'CCAP,5
	SET 'B,1
?L13:	GETP PRSI,P?SIZE >CSIZE
	GRTR? S,CCAP /?L16
	GRTR? S,CSIZE \?L14
?L16:	PRINTI "That won't fit in "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."
?L14:	ZERO? B \?L20
	CALL2 CONTENTS-WEIGHT,PRSI >W
	ADD W,S >X
	GRTR? X,CCAP \?L20
	PRINTI "There's not enough room in "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."
?L20:	MOVE PRSO,PRSI
	FSET PRSO,TOUCHBIT
	FCLEAR PRSO,WORNBIT
	EQUAL? REPORT-MODE,SHORT-REPORT \?L24
	PRINTR "Done."
?L24:	PRINTI "You put "
	ICALL2 PRINT-DEF,PRSO
	PRINTI " in "
	ICALL2 PRINT-DEF,PRSI
	PRINTR "."

	.FUNCT CONTENTS-WEIGHT,O,W,I
	FIRST? O >I \?L3
?L1:	GETP I,P?SIZE >STACK
	ADD W,STACK >W
	NEXT? I >I /?L1
?L3:	RETURN W

	.FUNCT WEIGHT,O,X,W,I
	GETP O,P?SIZE >W
	FIRST? O >I \?L3
?L1:	FSET? I,CONTBIT /?L6
	FSET? I,PERSONBIT \?L4
?L6:	CALL2 WEIGHT,I >X
	ADD W,X >W
	JUMP ?L7
?L4:	GETP I,P?SIZE >STACK
	ADD W,STACK >W
?L7:	NEXT? I >I /?L1
?L3:	RETURN W

	.FUNCT V-WEAR
	FSET? PRSO,WEARBIT \?L1
	ICALL PERFORM,V?TAKE,PRSO
	RTRUE
?L1:	ICALL2 NOT-POSSIBLE,STR?144
	RTRUE

	.FUNCT V-UNWEAR
	FSET? PRSO,WORNBIT \?L1
	IN? PRSO,WINNER \?L1
	CALL PERFORM,V?DROP,PRSO >STACK
	RSTACK
?L1:	PRINTR "You aren't wearing that."

	.FUNCT V-EAT
	EQUAL? PRSO,WINNER \?L1
	ICALL1 TSD
	RTRUE
?L1:	FSET? PRSO,PERSONBIT \?L3
	ICALL1 YOU-MASHER
	RTRUE
?L3:	FSET? PRSO,EDIBLEBIT \?L4
	REMOVE PRSO
	EQUAL? REPORT-MODE,SHORT-REPORT \?L5
	PRINTR "Eaten."
?L5:	PRINTI "You devour "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."
?L4:	PRINTR "That's hardly edible."

	.FUNCT V-VERSION,?TMP
	PRINT GAME-BANNER
	CRLF
	PRINTI "Release "
	GET 0,1 >STACK
	BAND STACK,2047 >STACK
	PRINTN STACK
	PRINTI " / Serial number "
	SET '?TMP,18
?L1:	GETB 0,?TMP >STACK
	PRINTC STACK
	IGRTR? '?TMP,23 \?L1
	PRINTR " / ZILF 0.9 lib J5"

	.FUNCT V-THINK-ABOUT
	EQUAL? PRSO,WINNER \?L1
	PRINTR "Yes, yes, you're very important."
?L1:	PRINTI "You contemplate "
	ICALL2 PRINT-DEF,PRSO
	PRINTR " for a bit, but nothing fruitful comes to mind."

	.FUNCT V-OPEN
	FSET? PRSO,PERSONBIT \?L1
	ICALL1 YOU-MASHER
	RTRUE
?L1:	FSET? PRSO,OPENABLEBIT /?L3
	ICALL2 NOT-POSSIBLE,STR?145
	RTRUE
?L3:	FSET? PRSO,OPENBIT \?L4
	PRINTR "It's already open."
?L4:	FSET? PRSO,LOCKEDBIT \?L5
	PRINTR "You'll have to unlock it first."
?L5:	FSET PRSO,TOUCHBIT
	FSET PRSO,OPENBIT
	EQUAL? REPORT-MODE,SHORT-REPORT \?L7
	PRINTI "Opened."
	CRLF
	JUMP ?L10
?L7:	PRINTI "You open "
	ICALL2 PRINT-DEF,PRSO
	PRINTI "."
	CRLF
	ZERO? HERE-LIT /?L10
	FSET? PRSO,CONTBIT \?L10
	FSET? PRSO,TRANSBIT /?L10
	ICALL2 DESCRIBE-CONTENTS,PRSO
?L10:	CALL1 NOW-LIT? >STACK
	RSTACK

	.FUNCT V-CLOSE
	FSET? PRSO,PERSONBIT \?L1
	ICALL1 YOU-MASHER
	RTRUE
?L1:	FSET? PRSO,OPENABLEBIT /?L3
	ICALL2 NOT-POSSIBLE,STR?146
	RTRUE
?L3:	FSET? PRSO,OPENBIT /?L4
	PRINTR "It's already closed."
?L4:	FSET PRSO,TOUCHBIT
	FCLEAR PRSO,OPENBIT
	EQUAL? REPORT-MODE,SHORT-REPORT \?L6
	PRINTI "Closed."
	CRLF
	JUMP ?L8
?L6:	PRINTI "You close "
	ICALL2 PRINT-DEF,PRSO
	PRINTI "."
	CRLF
?L8:	CALL1 NOW-DARK? >STACK
	RSTACK

	.FUNCT V-LOCK
	ICALL2 NOT-POSSIBLE,STR?147
	RTRUE

	.FUNCT V-UNLOCK
	ICALL2 NOT-POSSIBLE,STR?148
	RTRUE

	.FUNCT V-WAIT,T,INTERRUPT,ENDACT
	SET 'T,1
	PRINTI "Time passes."
	CRLF
?L1:	GETP HERE,P?ACTION >STACK
	CALL2 STACK,M-END >ENDACT
	CALL1 CLOCKER >INTERRUPT
	IGRTR? 'T,STANDARD-WAIT /TRUE
	ZERO? ENDACT \TRUE
	ZERO? INTERRUPT /?L1
	RTRUE

	.FUNCT V-AGAIN
	GETB AGAIN-STORAGE,25 >STACK
	ZERO? STACK \?L1
	PRINTR "Nothing to repeat."
?L1:	ICALL2 SAVE-PARSER-RESULT,TEMP-PARSER-RESULT
	ICALL2 RESTORE-PARSER-RESULT,AGAIN-STORAGE
	ZERO? PRSO /?L6
	ZERO? PRSO-DIR \?L6
	CALL2 STILL-VISIBLE-CHECK,P-PRSOS >STACK
	ZERO? STACK /?L5
	GETB P-SYNTAX,SYN-OPTS1 >STACK
	CALL HAVE-TAKE-CHECK-TBL,P-PRSOS,STACK >STACK
	ZERO? STACK /?L5
?L6:	ZERO? PRSI /?L9
	CALL2 STILL-VISIBLE-CHECK,P-PRSIS >STACK
	ZERO? STACK /?L5
	GETB P-SYNTAX,SYN-OPTS2 >STACK
	CALL HAVE-TAKE-CHECK-TBL,P-PRSIS,STACK >STACK
	ZERO? STACK /?L5
?L9:	ICALL PERFORM,PRSA,PRSO,PRSI
	EQUAL? PRSA,V?QUIT,V?VERSION,V?WAIT /?L16
	EQUAL? PRSA,V?SAVE,V?RESTORE,V?RESTART /?L16
	EQUAL? PRSA,V?INVENTORY,V?UNDO,V?SUPERBRIEF /?L16
	EQUAL? PRSA,V?BRIEF,V?VERBOSE,V?AGAIN /?L16
	EQUAL? PRSA,V?SCRIPT,V?UNSCRIPT,V?PRONOUNS /?L16
	EQUAL? PRSA,V?TELL /?L16
	GETP HERE,P?ACTION >STACK
	ICALL2 STACK,M-END
	ICALL1 CLOCKER
?L16:	LOC WINNER >HERE
?L5:	ICALL2 RESTORE-PARSER-RESULT,TEMP-PARSER-RESULT
	RTRUE

	.FUNCT V-READ,T
	FSET? PRSO,READBIT /?L1
	ICALL2 NOT-POSSIBLE,STR?149
	RTRUE
?L1:	GETP PRSO,P?TEXT >T
	ZERO? T /?L3
	PRINT T
	CRLF
	RTRUE
?L3:	GETP PRSO,P?TEXT-HELD >T
	ZERO? T /?L4
	IN? PRSO,WINNER \?L5
	PRINT T
	CRLF
	RTRUE
?L5:	PRINTR "You must be holding that to be able to read it."
?L4:	CALL PERFORM,V?EXAMINE,PRSO >STACK
	RSTACK

	.FUNCT V-TURN-ON
	EQUAL? PRSO,WINNER \?L1
	ICALL1 TSD
	RTRUE
?L1:	FSET? PRSO,DEVICEBIT /?L3
	ICALL2 NOT-POSSIBLE,STR?150
	RTRUE
?L3:	FSET? PRSO,ONBIT \?L4
	PRINTR "It's already on."
?L4:	FSET PRSO,ONBIT
	EQUAL? REPORT-MODE,SHORT-REPORT \?L6
	PRINTR "Switched on."
?L6:	PRINTI "You switch on "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."

	.FUNCT V-TURN-OFF
	EQUAL? PRSO,WINNER \?L1
	CALL2 PICK-ONE-R,T?246 >STACK
	PRINT STACK
	CRLF
	RTRUE
?L1:	FSET? PRSO,DEVICEBIT /?L3
	ICALL2 NOT-POSSIBLE,STR?150
	RTRUE
?L3:	FSET? PRSO,ONBIT /?L4
	PRINTR "It's already off."
?L4:	FCLEAR PRSO,ONBIT
	EQUAL? REPORT-MODE,SHORT-REPORT \?L6
	PRINTR "Switched off."
?L6:	PRINTI "You switch off "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."

	.FUNCT V-FLIP
	FSET? PRSO,DEVICEBIT /?L1
	FSET? PRSO,SURFACEBIT \?L3
	ICALL2 POINTLESS,STR?151
	RTRUE
?L3:	ICALL2 NOT-POSSIBLE,STR?150
	RTRUE
?L1:	FSET? PRSO,ONBIT \?L6
	ICALL PERFORM,V?TURN-OFF,PRSO
	RTRUE
?L6:	ICALL PERFORM,V?TURN-ON,PRSO
	RTRUE

	.FUNCT V-PUSH
	EQUAL? PRSO,WINNER \?L1
	PRINTR "No, you seem close to the edge."
?L1:	FSET? PRSO,PERSONBIT \?L3
	ICALL1 YOU-MASHER
	RTRUE
?L3:	ICALL2 POINTLESS,STR?152
	RTRUE

	.FUNCT V-PULL
	EQUAL? PRSO,WINNER \?L1
	PRINTR "That would demean both of us."
?L1:	FSET? PRSO,PERSONBIT \?L3
	ICALL1 YOU-MASHER
	RTRUE
?L3:	ICALL2 POINTLESS,STR?153
	RTRUE

	.FUNCT V-YES
	ICALL1 RHETORICAL
	RTRUE

	.FUNCT V-NO
	ICALL1 RHETORICAL
	RTRUE

	.FUNCT V-DRINK
	PRINTI "You aren't "
	ICALL2 ITALICIZE,STR?154
	PRINTR " thirsty."

	.FUNCT V-FILL
	ICALL1 BE-SPECIFIC
	RTRUE

	.FUNCT V-EMPTY
	ICALL1 BE-SPECIFIC
	RTRUE

	.FUNCT V-SMELL
	PRINTR "You smell nothing unexpected."

	.FUNCT V-ATTACK
	EQUAL? PRSO,WINNER \?L1
	PRINTR "Let's hope it doesn't come to that."
?L1:	FSET? PRSO,PERSONBIT \?L3
	ICALL1 YOU-MASHER
	RTRUE
?L3:	ICALL2 POINTLESS,STR?151
	RTRUE

	.FUNCT V-THROW-AT
	EQUAL? PRSO,WINNER \?L1
	PRINTI "Get "
	FSET? PRSO,PLURALBIT \?L3
	PUSH STR?155
	JUMP ?L5
?L3:	PUSH STR?156
?L5:	PRINT STACK
	PRINTR " yourself."
?L1:	FSET? PRSI,PERSONBIT \?L6
	ICALL2 YOU-MASHER,PRSI
	RTRUE
?L6:	ICALL POINTLESS,STR?151,0,1
	RTRUE

	.FUNCT V-GIVE
	EQUAL? PRSI,WINNER \?L1
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /?L3
	PRINTR "You already have that."
?L3:	PRINTI "Get "
	FSET? PRSO,PLURALBIT \?L6
	PUSH STR?155
	JUMP ?L8
?L6:	PUSH STR?156
?L8:	PRINT STACK
	PRINTR " yourself."
?L1:	EQUAL? PRSO,WINNER \?L9
	CALL1 SILLY >STACK
	RSTACK
?L9:	FSET? PRSO,PERSONBIT \?L10
	CALL1 YOU-MASHER >STACK
	RSTACK
?L10:	FSET? PRSI,PERSONBIT /?L11
	CALL2 NOT-POSSIBLE,STR?157 >STACK
	RSTACK
?L11:	ICALL2 PRINT-CDEF,PRSI
	FSET? PRSI,PLURALBIT \?L13
	PUSH STR?158
	JUMP ?L15
?L13:	PUSH STR?159
?L15:	PRINT STACK
	PRINTI " take "
	ICALL2 PRINT-DEF,PRSO
	PRINTR "."

	.FUNCT V-SGIVE
	ICALL PERFORM,V?GIVE,PRSI,PRSO
	RTRUE

	.FUNCT PRE-TELL
	EQUAL? PRSO,WINNER /?L3
	FSET? PRSO,PERSONBIT /FALSE
?L3:	SET 'P-CONT,0
	PRINTI "Talking to "
	EQUAL? PRSO,WINNER \?L4
	PRINTI "yourself"
	JUMP ?L6
?L4:	ICALL2 PRINT-INDEF,PRSO
?L6:	PRINTR ", huh?"

	.FUNCT V-TELL-ABOUT
	ICALL2 PRINT-CDEF,PRSO
	PRINTR " doesn't seem interested."

	.FUNCT V-TELL
	SET 'WINNER,PRSO
	RTRUE

	.FUNCT V-WAVE-HANDS
	ICALL2 POINTLESS,STR?160
	RTRUE

	.FUNCT V-WAVE
	ICALL1 SILLY
	RTRUE

	.FUNCT V-CLIMB
	ZERO? PRSO /?L1
	ICALL2 NOT-POSSIBLE,STR?161
	RTRUE
?L1:	ICALL1 SILLY
	RTRUE

	.FUNCT V-SWIM
	ICALL1 SILLY
	RTRUE

	.FUNCT V-JUMP
	ICALL2 POINTLESS,STR?162
	RTRUE

	.FUNCT V-SING
	PRINTR "You give a stirring performance of ""MacArthur Park"". Bravo!"

	.FUNCT V-DANCE
	PRINTR "Dancing is forbidden."

	.FUNCT V-WAKE
	EQUAL? PRSO,WINNER \?L1
	PRINTR "If only this were a dream."
?L1:	FSET? PRSO,PERSONBIT \?L3
	CALL1 YOU-MASHER >STACK
	RSTACK
?L3:	CALL2 NOT-POSSIBLE,STR?163 >STACK
	RSTACK

	.FUNCT V-RUB
	EQUAL? PRSO,WINNER \?L1
	CALL1 TSD >STACK
	RSTACK
?L1:	FSET? PRSO,PERSONBIT \?L3
	CALL1 YOU-MASHER >STACK
	RSTACK
?L3:	CALL2 POINTLESS,STR?164 >STACK
	RSTACK

	.FUNCT V-BURN
	EQUAL? PRSO,WINNER \?L1
	PRINTR "What is this, the Friars Club?"
?L1:	FSET? PRSO,PERSONBIT \?L3
	CALL1 YOU-MASHER >STACK
	RSTACK
?L3:	CALL2 POINTLESS,STR?165 >STACK
	RSTACK

	.FUNCT V-UNDO
	ZERO? USAVE \?L1
	PRINTR "Cannot undo any further."
?L1:	IRESTORE >STACK
	ZERO? STACK \FALSE
	PRINTR "Undo failed."

	.FUNCT V-SAVE
	PRINTI "Saving..."
	CRLF
	CRLF
	SAVE >STACK
	ZERO? STACK /?L1
	CALL1 V-LOOK >STACK
	RSTACK
?L1:	PRINTR "Save failed."

	.FUNCT V-RESTORE
	RESTORE >STACK
	ZERO? STACK \FALSE
	PRINTR "Restore failed."

	.FUNCT V-BRIEF
	PRINTI "Brief descriptions."
	CRLF
	SET 'MODE,BRIEF
	RETURN MODE

	.FUNCT V-VERBOSE
	PRINTI "Verbose descriptions."
	CRLF
	CRLF
	SET 'MODE,VERBOSE
	CALL1 V-LOOK >STACK
	RSTACK

	.FUNCT V-SUPERBRIEF
	PRINTI "Superbrief descriptions."
	CRLF
	SET 'MODE,SUPERBRIEF
	RETURN MODE

	.FUNCT V-SCRIPT
	GET 0,8 >STACK
	BTST STACK,1 \?L1
	PRINTR "Transcript already on."
?L1:	DIROUT 2
	GET 0,8 >STACK
	BTST STACK,1 \?L3
	PRINTI "This begins a transcript of "
	ICALL1 V-VERSION
	RTRUE
?L3:	PRINTR "Failed."

	.FUNCT V-UNSCRIPT
	GET 0,8 >STACK
	BTST STACK,1 /?L1
	PRINTR "Transcript already off."
?L1:	CRLF
	PRINTI "End of transcript."
	CRLF
	DIROUT -2
	GET 0,8 >STACK
	BTST STACK,1 \FALSE
	PRINTR "Failed."

	.FUNCT PLAYER-F
	EQUAL? PLAYER,PRSO \FALSE
	EQUAL? PRSA,V?EXAMINE \FALSE
	PRINTR "You look like you're up for an adventure."

	.FUNCT PARSER,NOBJ,VAL,DIR,DIR-WN,O-R,KEEP,OW,OH,OHL,RES,W,V
?L0:	SET 'OW,WINNER
	SET 'OH,HERE
	SET 'OHL,HERE-LIT
	SET 'NOBJ,0
	SET 'VAL,0
	SET 'DIR,0
	SET 'DIR-WN,0
	LESS? P-CONT,0 \?L1
	SET 'P-CONT,0
?L1:	ZERO? P-CONT /?L4
	SET 'READBUF,CONT-READBUF
	SET 'LEXBUF,CONT-LEXBUF
	EQUAL? P-CONT,1 \?L8
	SET 'P-CONT,0
	JUMP ?L15
?L8:	EQUAL? MODE,SUPERBRIEF /?L15
	EQUAL? PRSA,V?TELL /?L15
	CRLF
	JUMP ?L15
?L4:	SET 'WINNER,PLAYER
	LOC WINNER >HERE
	CALL1 SEARCH-FOR-LIGHT >HERE-LIT
	ICALL2 READLINE,1
?L15:	GETB LEXBUF,1 >P-LEN
	ZERO? P-LEN \?L16
	PRINTI "Huh?"
	CRLF
	SET 'P-CONT,0
	RFALSE
?L16:	LESS? P-LEN,1 /?L19
	CALL2 GETWORD?,1 >STACK
	EQUAL? STACK,W?UNDO \?L19
	EQUAL? P-LEN,1 /?L27
	CALL2 GETWORD?,2 >STACK
	EQUAL? STACK,W?$PERIOD,W?THEN /?L27
?L19:	ISAVE >RES
	EQUAL? RES,2 \?L25
	PRINTI "Previous turn undone."
	CRLF
	CRLF
	SET 'WINNER,OW
	SET 'HERE,OH
	SET 'HERE-LIT,OHL
	ICALL1 V-LOOK
	SET 'P-CONT,0
	JUMP ?L0
?L25:	SET 'USAVE,RES
?L27:	ZERO? P-CONT \?L38
	ZERO? P-LEN /?L38
	CALL2 GETWORD?,1 >STACK
	EQUAL? STACK,W?OOPS \?L38
	EQUAL? P-LEN,2 \?L32
	GETB P-OOPS-DATA,4 >STACK
	ZERO? STACK /?L34
	ICALL2 HANDLE-OOPS,2
	GETB LEXBUF,1 >P-LEN
	JUMP ?L38
?L34:	PRINTI "Nothing to correct."
	CRLF
	RFALSE
?L32:	EQUAL? P-LEN,1 \?L37
	PRINTI "It's OK."
	CRLF
	RFALSE
?L37:	PRINTI "You can only correct one word at a time."
	CRLF
	RFALSE
?L38:	SET 'KEEP,0
	PUTB P-OOPS-DATA,4,0
	PUTB P-OOPS-DATA,5,0
	PUT P-OOPS-DATA,0,P-O-REASON
	ZERO? P-CONT \?L70
	EQUAL? READBUF,EDIT-READBUF /?L43
	ICALL COPY-READBUF,READBUF,EDIT-READBUF
	ICALL COPY-LEXBUF,LEXBUF,EDIT-LEXBUF
	SET 'READBUF,EDIT-READBUF
	SET 'LEXBUF,EDIT-LEXBUF
?L43:	ZERO? P-O-REASON /?L50
	CALL1 HANDLE-ORPHAN-RESPONSE >O-R
	EQUAL? O-R,O-RES-NOT-HANDLED /?L52
	SET 'WINNER,OW
	SET 'HERE,OH
	SET 'HERE-LIT,OHL
?L52:	EQUAL? O-R,O-RES-REORPHANED /FALSE
	EQUAL? O-R,O-RES-FAILED \?L57
	SET 'P-O-REASON,0
	RFALSE
?L57:	EQUAL? O-R,O-RES-SET-NP \?L58
	GETB P-SYNTAX,SYN-PREP1 >P-P1
	BTST P-O-REASON,P-OF-PRSI \?L59
	GETB P-SYNTAX,SYN-PREP2 >P-P2
	SET 'P-NOBJ,2
	SET 'KEEP,1
	JUMP ?L65
?L59:	SET 'P-NOBJ,1
	JUMP ?L65
?L58:	EQUAL? O-R,O-RES-SET-PRSTBL \?L65
	BTST P-O-REASON,P-OF-PRSI \?L63
	SET 'KEEP,2
	JUMP ?L65
?L63:	SET 'KEEP,1
?L65:	SET 'P-O-REASON,0
?L50:	ZERO? O-R \?L70
	CALL1 CONVERT-ORDER-TO-TELL? >STACK
	ZERO? STACK /?L70
	GETB LEXBUF,1 >P-LEN
?L70:	EQUAL? O-R,O-RES-SET-NP,O-RES-SET-PRSTBL /?L75
	SET 'P-V,0
	SET 'P-NOBJ,0
	ICALL2 CLEAR-NOUN-PHRASE,P-NP-DOBJ
	ICALL2 CLEAR-NOUN-PHRASE,P-NP-IOBJ
	SET 'P-P1,0
	SET 'P-P2,0
	SET 'RES,P-CONT
	ZERO? RES \?L77
	SET 'RES,1
?L77:	GRTR? RES,P-LEN \?L81
	SET 'P-CONT,0
	JUMP ?L80
?L81:	CALL2 GETWORD?,RES >W
	ZERO? W \?L83
	CALL2 PARSE-NUMBER?,RES >STACK
	ZERO? STACK /?L84
	SET 'W,W?$002cNUMBER
	ZERO? W \?L83
?L84:	ICALL2 STORE-OOPS,RES
	SET 'P-CONT,0
	PRINT SYSMESSAGE-006
	CRLF
	RFALSE
?L83:	EQUAL? W,W?THEN,W?$PERIOD \?L85
	ADD RES,1 >P-CONT
	GRTR? P-CONT,P-LEN \?L86
	SET 'P-CONT,0
	JUMP ?L80
?L86:	ICALL COPY-READBUF,READBUF,CONT-READBUF
	ICALL COPY-LEXBUF,LEXBUF,CONT-LEXBUF
	JUMP ?L80
?L85:	ZERO? P-V \?L91
	CALL CHKWORD?,W,PS?VERB,P1?VERB >V
	ZERO? V /?L91
	ZERO? DIR /?L92
	EQUAL? V,ACT?WALK \?L91
?L92:	SET 'P-V-WORD,W
	SET 'P-V-WORDN,RES
	SET 'P-V,V
	JUMP ?L110
?L91:	ZERO? DIR \?L93
	EQUAL? P-V,0,ACT?WALK \?L93
	CALL CHKWORD?,W,PS?DIRECTION,P1?DIRECTION >VAL
	ZERO? VAL /?L93
	SET 'DIR,VAL
	SET 'DIR-WN,RES
	JUMP ?L110
?L93:	CALL CHKWORD?,W,PS?PREPOSITION,0 >VAL
	ZERO? VAL /?L94
	ZERO? NOBJ \?L95
	ZERO? P-P1 \?L95
	SET 'P-P1,VAL
	JUMP ?L110
?L95:	EQUAL? NOBJ,1 \?L110
	ZERO? P-P2 \?L110
	SET 'P-P2,VAL
	JUMP ?L110
?L94:	CALL2 STARTS-NOUN-PHRASE?,W >STACK
	ZERO? STACK /?L99
	INC 'NOBJ
	EQUAL? NOBJ,1 \?L100
	ZERO? DIR /?L102
	ZERO? P-V /?L102
	ZERO? P-P1 \?L102
	CALL2 GETWORD?,DIR-WN >V
	ZERO? V /?L102
	CALL CHKWORD?,V,PS?PREPOSITION,0 >VAL
	ZERO? VAL /?L102
	SET 'P-P1,VAL
	SET 'DIR,0
	SET 'DIR-WN,0
?L102:	CALL PARSE-NOUN-PHRASE,RES,P-NP-DOBJ >VAL
	JUMP ?L106
?L100:	EQUAL? NOBJ,2 \?L105
	CALL PARSE-NOUN-PHRASE,RES,P-NP-IOBJ >VAL
	JUMP ?L106
?L105:	SET 'P-CONT,0
	PRINTI "That sentence has too many objects."
	CRLF
	RFALSE
?L106:	ZERO? VAL /?L107
	SET 'RES,VAL
	JUMP ?L77
?L107:	SET 'P-CONT,0
	RFALSE
?L99:	ICALL2 STORE-OOPS,RES
	SET 'P-CONT,0
	PRINTI "I didn't expect the word """
	ICALL2 PRINT-WORD,RES
	PRINTI """ there."
	CRLF
	RFALSE
?L110:	INC 'RES
	JUMP ?L77
?L80:	SET 'P-NOBJ,NOBJ
	ZERO? DIR /?L111
	EQUAL? P-V,0,ACT?WALK \?L111
	ZERO? NOBJ \?L111
	ZERO? P-P1 \?L111
	ZERO? P-P2 \?L111
	SET 'PRSO-DIR,1
	SET 'PRSA,V?WALK
	SET 'PRSO,DIR
	SET 'PRSI,0
	EQUAL? PRSA,V?AGAIN /TRUE
	ICALL2 SAVE-PARSER-RESULT,AGAIN-STORAGE
	RTRUE
?L111:	ZERO? P-V \?L117
	SET 'P-CONT,0
	PRINTI "That sentence has no verb."
	CRLF
	RFALSE
?L117:	ZERO? DIR /?L119
	ICALL2 STORE-OOPS,DIR-WN
	SET 'P-CONT,0
	PRINTI "I don't understand what """
	ICALL2 PRINT-WORD,DIR-WN
	PRINTI """ is doing in that sentence."
	CRLF
	RFALSE
?L119:	SET 'PRSO-DIR,0
?L75:	ZERO? O-R \?L122
	CALL1 MATCH-SYNTAX >STACK
	ZERO? STACK /?L126
	CALL2 FIND-OBJECTS,KEEP >STACK
	ZERO? STACK \?L129
?L126:	SET 'P-CONT,0
	RFALSE
?L122:	LESS? KEEP,2 \?L129
	CALL2 FIND-OBJECTS,KEEP >STACK
	ZERO? STACK \?L129
	SET 'P-CONT,0
	RFALSE
?L129:	EQUAL? PRSA,V?AGAIN /?L133
	ICALL2 SAVE-PARSER-RESULT,AGAIN-STORAGE
?L133:	ICALL SET-PRONOUNS,PRSO,P-PRSOS
	RTRUE

	.FUNCT CONVERT-ORDER-TO-TELL?,P,W
	LESS? P-LEN,2 /FALSE
	CALL2 GETWORD?,1 >STACK
	CALL2 STARTS-NOUN-PHRASE?,STACK >STACK
	ZERO? STACK /?L3
	CALL PARSE-NOUN-PHRASE,1,P-NP-XOBJ,1 >P
	ZERO? P /?L3
	LESS? P,P-LEN \?L3
	CALL2 GETWORD?,P >STACK
	EQUAL? STACK,W?$COMMA \?L3
	ADD P,1 >STACK
	CALL2 GETWORD?,STACK >W
	CALL CHKWORD?,W,PS?VERB >STACK
	ZERO? STACK \?L4
	CALL CHKWORD?,W,PS?DIRECTION >STACK
	ZERO? STACK /?L3
?L4:	ICALL REPLACE-HELD-WORD,P,W?$PERIOD
	ICALL INSERT-HELD-WORD,1,W?$002cTELL
	RTRUE
?L3:	CALL2 GETWORD?,1 >STACK
	EQUAL? STACK,W?TELL \?L5
	CALL PARSE-NOUN-PHRASE,2,P-NP-XOBJ,1 >P
	ZERO? P /?L5
	LESS? P,P-LEN \?L5
	CALL2 GETWORD?,P >STACK
	EQUAL? STACK,W?TO \?L5
	ADD P,1 >STACK
	CALL2 GETWORD?,STACK >W
	CALL CHKWORD?,W,PS?VERB >STACK
	ZERO? STACK \?L6
	CALL CHKWORD?,W,PS?DIRECTION >STACK
	ZERO? STACK /?L5
?L6:	ICALL REPLACE-HELD-WORD,P,W?$PERIOD
	ICALL REPLACE-HELD-WORD,1,W?$002cTELL
	RTRUE
?L5:	CALL2 GETWORD?,1 >STACK
	CALL2 STARTS-NOUN-PHRASE?,STACK >STACK
	ZERO? STACK /FALSE
	CALL2 FIND-COMMA-POSITION,1 >P
	ZERO? P /FALSE
	LESS? P,P-LEN \FALSE
	GRTR? P,0 \FALSE
	ADD P,1 >STACK
	CALL2 GETWORD?,STACK >STACK
	CALL2 STARTS-NOUN-PHRASE?,STACK >STACK
	ZERO? STACK /FALSE
	ICALL REPLACE-HELD-WORD,P,W?ABOUT
	ICALL INSERT-HELD-WORD,1,W?TELL
	RTRUE

	.FUNCT FIND-COMMA-POSITION,WN
?L1:	GRTR? WN,P-LEN /FALSE
	CALL2 GETWORD?,WN >STACK
	EQUAL? STACK,W?$COMMA \?L5
	RETURN WN
?L5:	INC 'WN
	JUMP ?L1

	.FUNCT PARSE-NUMBER?,WN,I,MAX,V,C,NEG,OVF,HASH,V-HASH
	MUL WN,4 >STACK
	INC 'STACK
	GETB LEXBUF,STACK >I
	MUL WN,4 >STACK
	GETB LEXBUF,STACK >STACK
	ADD I,STACK >STACK
	SUB STACK,1 >MAX
	SET 'OVF,0
	SET 'HASH,1
	SET 'V-HASH,0
	ZERO? MAX /FALSE
	GETB READBUF,I >C
	EQUAL? C,45 \?L4
	SET 'NEG,1
	IGRTR? 'I,MAX /FALSE
	GETB READBUF,I >C
?L4:	LESS? C,48 /FALSE
	GRTR? C,57 /FALSE
	EQUAL? V,3276 \?L13
	EQUAL? C,56 \?L13
	ZERO? NEG /?L13
	EQUAL? I,MAX \?L13
	SET 'V,-32768
	JUMP ?L27
?L13:	LESS? V,3276 /?L16
	GRTR? V,3276 /?L18
	GRTR? C,55 \?L16
?L18:	SET 'V,32767
	SET 'OVF,1
?L16:	ZERO? OVF \?L20
	SUB C,48 >STACK
	MUL V,10 >STACK
	ADD STACK,STACK >V
?L20:	SUB C,48 >STACK
	MUL HASH,STACK >STACK
	ADD V-HASH,STACK >STACK
	MOD STACK,10000 >V-HASH
	INC 'HASH
	IGRTR? 'I,MAX /?L24
	GETB READBUF,I >C
	JUMP ?L4
?L24:	ZERO? NEG /?L27
	SUB 0,V >V
?L27:	SET 'P-NUMBER,V
	SET 'P-NUMBER-HASH,V-HASH
	MUL I,2 >STACK
	DEC 'STACK
	PUT LEXBUF,STACK,W?$002cNUMBER
	RETURN NUMBER

	.FUNCT PARSE-NOUN-PHRASE,WN,NP,SILENT?,SPEC,CNT,W,VAL,MODE?1,ADJ,NOUN,BUT,SPEC-WN,NW
	ASSIGNED? 'SILENT? /?L68
	SET 'SILENT?,0
?L68:	GET NP,1 >SPEC
	PUTB NP,1,0
?L1:	GRTR? WN,P-LEN /?L2
	CALL2 GETWORD?,WN >W
	ZERO? W \?L5
	CALL2 PARSE-NUMBER?,WN >STACK
	ZERO? STACK /?L6
	SET 'W,W?$002cNUMBER
	ZERO? W \?L5
?L6:	ZERO? SILENT? \FALSE
	ICALL2 STORE-OOPS,WN
	PRINT SYSMESSAGE-006
	CRLF
	RFALSE
?L5:	EQUAL? W,W?THEN,W?$PERIOD /?L2
	ZERO? BUT \?L11
	EQUAL? W,W?BUT,W?EXCEPT \?L11
	ZERO? ADJ \?L14
	ZERO? NOUN /?L12
?L14:	PUT SPEC,0,ADJ
	PUT SPEC,1,NOUN
	SET 'NOUN,0
	SET 'ADJ,NOUN
	INC 'CNT
?L12:	PUTB NP,0,CNT
	SET 'BUT,1
	GET NP,2 >SPEC
	SET 'CNT,0
	JUMP ?L60
?L11:	EQUAL? W,W?ALL,W?EVERY,W?EVERYTHING /?L17
	EQUAL? W,W?ANY,W?ONE \?L16
?L17:	ZERO? MODE?1 \?L20
	ZERO? ADJ \?L20
	ZERO? NOUN /?L18
?L20:	ZERO? SILENT? \FALSE
	PRINTI "You can't use """
	PRINTB W
	PRINTI """ there."
	CRLF
	RFALSE
?L18:	EQUAL? W,W?ALL,W?EVERY,W?EVERYTHING \?L25
	SET 'MODE?1,MCM-ALL
	JUMP ?L27
?L25:	SET 'MODE?1,MCM-ANY
?L27:	SET 'SPEC-WN,WN
	JUMP ?L60
?L16:	SET 'VAL,W
	CALL CHKWORD?,VAL,PS?ADJECTIVE >STACK
	ZERO? STACK /?L28
	ZERO? NOUN \?L2
	SET 'SPEC-WN,WN
	CALL CHKWORD?,W,PS?OBJECT >STACK
	ZERO? STACK /?L32
	EQUAL? WN,P-LEN /?L34
	ADD WN,1 >STACK
	CALL2 GETWORD?,STACK >NW
	CALL CHKWORD?,NW,PS?ADJECTIVE >STACK
	ZERO? STACK \?L32
	CALL CHKWORD?,NW,PS?OBJECT >STACK
	ZERO? STACK \?L32
?L34:	SET 'NOUN,W
	JUMP ?L60
?L32:	EQUAL? CNT,P-MAX-OBJSPECS \?L39
	ZERO? SILENT? \FALSE
	PRINTI "That phrase mentions too many objects."
	CRLF
	RFALSE
?L39:	ZERO? ADJ \?L60
	SET 'ADJ,VAL
	JUMP ?L60
?L28:	CALL CHKWORD?,W,PS?OBJECT >STACK
	ZERO? STACK /?L45
	ZERO? NOUN \?L2
	EQUAL? CNT,P-MAX-OBJSPECS \?L48
	ZERO? SILENT? \FALSE
	PRINTI "That phrase mentions too many objects."
	CRLF
	RFALSE
?L48:	SET 'NOUN,W
	SET 'SPEC-WN,WN
	JUMP ?L60
?L45:	EQUAL? W,W?AND,W?$COMMA \?L53
	ZERO? ADJ \?L56
	ZERO? NOUN /?L60
?L56:	PUT SPEC,0,ADJ
	PUT SPEC,1,NOUN
	SET 'NOUN,0
	SET 'ADJ,NOUN
	ADD SPEC,P-OBJSPEC-SIZE >SPEC
	INC 'CNT
	JUMP ?L60
?L53:	EQUAL? W,W?OF \?L58
	LESS? WN,P-LEN \?L58
	ADD WN,1 >STACK
	CALL2 GETWORD?,STACK >STACK
	CALL2 STARTS-NOUN-PHRASE?,STACK >STACK
	ZERO? STACK /?L58
	SET 'NOUN,0
	JUMP ?L60
?L58:	CALL CHKWORD?,W,PS?BUZZ-WORD >STACK
	ZERO? STACK /?L2
	SET 'SPEC-WN,WN
?L60:	INC 'WN
	JUMP ?L1
?L2:	ZERO? ADJ \?L63
	ZERO? NOUN /?L61
?L63:	PUT SPEC,0,ADJ
	PUT SPEC,1,NOUN
	INC 'CNT
?L61:	ZERO? BUT /?L65
	PUTB NP,1,CNT
	JUMP ?L67
?L65:	PUTB NP,0,CNT
?L67:	PUTB NP,6,MODE?1
	ADD SPEC-WN,1 >STACK
	RSTACK

	.FUNCT ALL-INCLUDES?,OBJ
	FSET? OBJ,INVISIBLE /FALSE
	EQUAL? PRSA,V?TAKE \?L3
	CALL2 HELD?,OBJ >STACK
	ZERO? STACK \FALSE
?L3:	EQUAL? PRSA,V?DROP \?L4
	CALL2 HELD?,OBJ >STACK
	ZERO? STACK /FALSE
?L4:	EQUAL? OBJ,WINNER /FALSE
	EQUAL? PRSA,V?TAKE,V?DROP \TRUE
	FSET? OBJ,TAKEBIT /TRUE
	FSET? OBJ,TRYTAKEBIT /TRUE
	RFALSE

	.FUNCT READLINE,PROMPT?
	ZERO? PROMPT? /?L1
	CRLF
	PRINT SYSMESSAGE-002
?L1:	SET 'READBUF,KBD-READBUF
	SET 'LEXBUF,KBD-LEXBUF
	PUTB READBUF,0,98
	PUTB READBUF,1,0
	ICALL1 UPDATE-STATUS-LINE
	READ READBUF,LEXBUF >STACK
	RTRUE

	.FUNCT UPDATE-STATUS-LINE,WIDTH
	SCREEN 1
	HLIGHT H-INVERSE
	ICALL1 FAKE-ERASE
	PRINTC 32
	ZERO? HERE-LIT /?L1
	PRINTD HERE
	JUMP ?L3
?L1:	PRINTI "Darkness"
?L3:	GETB 0,33 >WIDTH
	ZERO? GAME$005fVERSION$005fCLASSIC \?L4
	SUB WIDTH,22 >STACK
	CURSET 1,STACK
	PRINTI "Score: "
	PRINTN SCORE
?L4:	SUB WIDTH,10 >STACK
	CURSET 1,STACK
	PRINTI "Turns: "
	PRINTN MOVES
	SCREEN 0
	HLIGHT H-NORMAL
	RTRUE

	.FUNCT JIGS-UP,TEXT,W
	SET 'P-CONT,0
	PRINT TEXT
	CRLF
	EQUAL? TEXT,STR?105 /?L1
	CRLF
?L1:	ZERO? GAME$005fVERSION$005fCLASSIC /?L4
	PRINT SYSMESSAGE-017
	JUMP ?L6
?L4:	PRINTI "You hace scored "
	PRINTN SCORE
	PRINTI " out of 100 points in "
?L6:	PRINTN MOVES
	PRINT SYSMESSAGE-018
	EQUAL? MOVES,1 /?L7
	PRINT SYSMESSAGE-019
?L7:	PRINT SYSMESSAGE-020
	CRLF
	CRLF
	ICALL1 PRINT-GAME-OVER
	CRLF
?L11:	PRINTI "Would you like to RESTART, UNDO, RESTORE, or QUIT? > "
?L14:	ICALL1 READLINE
	GETB LEXBUF,1 >STACK
	ZERO? STACK \?L17
	SET 'W,0
	JUMP ?L16
?L17:	GET LEXBUF,1 >W
?L16:	EQUAL? W,W?RESTART \?L18
	RESTART
?L18:	EQUAL? W,W?RESTORE \?L20
	RESTORE >STACK
	PRINTI "Restore failed."
	CRLF
	JUMP ?L11
?L20:	EQUAL? W,W?QUIT \?L21
	CRLF
	PRINT SYSMESSAGE-014
	CRLF
	QUIT
?L21:	EQUAL? W,W?UNDO \?L22
	ICALL1 V-UNDO
	PRINTI "Undo failed."
	CRLF
	JUMP ?L11
?L22:	CRLF
	PRINTI "(Please type RESTART, UNDO, RESTORE or QUIT) >"
	JUMP ?L14

	.FUNCT PRINT-GAME-OVER
	PRINT SYSMESSAGE-013
	CRLF
	RTRUE

	.FUNCT V-QUIT
	CRLF
	PRINT SYSMESSAGE-012
	CALL1 YES? >STACK
	ZERO? STACK /?L1
	CALL2 JIGS-UP,STR?105 >STACK
	RSTACK
?L1:	CRLF
	PRINTR "OK - not quitting."

	.FUNCT V-INVENTORY,I
	ZERO? HERE-LIT /?L1
	FIRST? WINNER >STACK \?L3
	PRINTI "You are carrying:"
	CRLF
	FIRST? WINNER >I \TRUE
?L5:	PRINTI "   "
	ICALL2 PRINT-INDEF,I
	FSET? I,WORNBIT \?L8
	PRINTI " (worn)"
?L8:	FSET? I,LIGHTBIT \?L10
	PRINTI " (providing light)"
?L10:	FSET? I,CONTBIT \?L20
	FSET? I,OPENABLEBIT \?L18
	FSET? I,OPENBIT \?L16
	PRINTI " (open)"
	JUMP ?L18
?L16:	PRINTI " (closed)"
?L18:	CALL2 SEE-INSIDE?,I >STACK
	ZERO? STACK /?L20
	ICALL2 INV-DESCRIBE-CONTENTS,I
?L20:	CRLF
	NEXT? I >I /?L5
	RTRUE
?L3:	PRINT SYSMESSAGE-011
	CRLF
	RTRUE
?L1:	PRINTR "It's too dark to see what you're carrying."

	.FUNCT V-RESTART
	CRLF
	PRINTI "Are you sure you want to restart?"
	CALL1 YES? >STACK
	ZERO? STACK /?L1
	RESTART
?L1:	PRINTR "Restart aborted."

	.FUNCT V-BUY
	CALL2 HELD?,06-COIN >STACK
	ZERO? STACK \?L1
	CALL2 HELD?,12-MONEY >STACK
	ZERO? STACK \?L1
	PRINT MESSAGE-040
	CRLF
	RTRUE
?L1:	EQUAL? HERE,24-FURNITURE-SHOP \?L4
	PRINT MESSAGE-093
	CRLF
	RTRUE
?L4:	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT V-INSERT
	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT V-THROW
	CALL1 V-DROP >STACK
	RSTACK

	.FUNCT V-DESCEND
	ZERO? PRSO \?L1
	ICALL2 DO-WALK,P?DOWN
	RTRUE
?L1:	PRINT SYSMESSAGE-007
	RTRUE

	.FUNCT V-GO-IN
	CALL2 DO-WALK,P?IN >STACK
	RSTACK

	.FUNCT V-SAY
	PRINT MESSAGE-083
	CRLF
	RTRUE

	.FUNCT V-TIE
	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT V-UNTIE
	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT V-DIG
	CALL2 HELD?,15-SHOVEL >STACK
	ZERO? STACK /?L1
	PRINT MESSAGE-100
	CRLF
	RTRUE
?L1:	PRINT MESSAGE-099
	CRLF
	RTRUE

	.FUNCT V-SLEEP
	CALL2 HELD?,24-VELVET-CUSHION >STACK
	ZERO? STACK \?L3
	LOC 24-VELVET-CUSHION >STACK
	EQUAL? STACK,HERE \?L1
?L3:	CALL2 HELD?,27-SATIN-CUSHION >STACK
	ZERO? STACK \?L4
	LOC 27-SATIN-CUSHION >STACK
	EQUAL? STACK,HERE \?L1
?L4:	CALL2 HELD?,33-RADIO-MELLOW-YELLOW >STACK
	ZERO? STACK \?L5
	LOC 33-RADIO-MELLOW-YELLOW >STACK
	EQUAL? STACK,HERE \?L1
?L5:	PRINT MESSAGE-080
	CRLF
	ZERO? SCORE-SLEEP-FLAG \TRUE
	ADD SCORE,10 >SCORE
	SET 'SCORE-SLEEP-FLAG,1
	RTRUE
?L1:	PRINT MESSAGE-079
	CRLF
	RTRUE

	.FUNCT V-LOOK-UP
	PRINTR "You see nothing special."

	.FUNCT V-SPRAY
	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT V-MAKE-LINE
	CALL2 HELD?,18-PENCIL >STACK
	ZERO? STACK /?L1
	ICALL2 JIGS-UP,MESSAGE-055
	RTRUE
?L1:	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT V-MODERN
	PRINTI "The game is now in modern mode."
	CRLF
	SET 'GAME$005fVERSION$005fCLASSIC,0
	SET 'HINTS-OFF,0
	RETURN HINTS-OFF

	.FUNCT V-CLASSIC
	PRINTI "The game is now in classic mode."
	CRLF
	SET 'GAME$005fVERSION$005fCLASSIC,1
	SET 'HINTS-OFF,1
	RETURN HINTS-OFF

	.FUNCT V-ABOUT
	PRINTI "Werner's Quest was originally developed by Jan Åberg for the Commodore 64 with the Quill Adventure System. This version for the Z-machine other than using an improved parser and a status line, have the same game logic with some minor changes. If you want to play Werner's Quest without these changes you can change the game mode from modern mode to classic mode with the commands 'MODERN' or 'CLASSIC'.

The difference between modern mode and classic mode is primarely that in modern mode you have scoring.

For a detailed list of differences between classic and modern mode type 'DETAILS'.
"
	RTRUE

	.FUNCT V-DETAILS
	PRINTI "There are only a few differences between standard and classic mode. In standard mode:

          1. There is a scoring system.
"
	RTRUE

	.FUNCT PRINT-SPACES,CNT
?L1:	DLESS? 'CNT,0 /TRUE
	PRINTC 32
	JUMP ?L1

	.FUNCT V-HINTS-NO
	ZERO? HINTS-OFF /?L1
	PRINTI "I don't understand what you mean."
	CRLF
	RETURN 2
?L1:	SET 'HINTS-OFF,1
	PRINTI "[Hints have been disallowed for this session.]"
	CRLF
	RETURN 2

	.FUNCT V-HINTS,CHR,MAXC,C,Q
?L0:	SET 'C,0
	ZERO? HINTS-OFF /?L1
	ICALL2 PERFORM,V?HINTS-NO
	RETURN 2
?L1:	ZERO? HINT-WARNING \?L3
	SET 'HINT-WARNING,1
	PRINTI "[Warning: It is recognized that the temptation for help may at times be so exceedingly strong that you might fetch hints prematurely. Therefore, you may at any time during the story type HINTS OFF, and this will disallow the seeking out of help for the present session of the story. If you still want a hint now, indicate HINT.]"
	CRLF
	RETURN 2
?L3:	GET HINTS,0 >MAXC
	ICALL1 INIT-HINT-SCREEN
	CURSET 5,1
	ICALL1 PUT-UP-CHAPTERS
	SUB CHAPT-NUM,1 >CUR-POS
	ICALL1 NEW-CURSOR
?L5:	INPUT 1 >CHR
	EQUAL? CHR,81,113,131 \?L7
	SET 'Q,1
	JUMP ?L6
?L7:	EQUAL? CHR,78,110,130 \?L9
	ICALL1 ERASE-CURSOR
	EQUAL? CHAPT-NUM,MAXC \?L10
	SET 'CUR-POS,0
	SET 'CHAPT-NUM,1
	SET 'QUEST-NUM,1
	JUMP ?L12
?L10:	INC 'CUR-POS
	INC 'CHAPT-NUM
	SET 'QUEST-NUM,1
?L12:	ICALL1 NEW-CURSOR
	JUMP ?L5
?L9:	EQUAL? CHR,80,112,129 \?L13
	ICALL1 ERASE-CURSOR
	EQUAL? CHAPT-NUM,1 \?L14
	SET 'CHAPT-NUM,MAXC
	SUB CHAPT-NUM,1 >CUR-POS
	SET 'QUEST-NUM,1
	JUMP ?L16
?L14:	DEC 'CUR-POS
	DEC 'CHAPT-NUM
	SET 'QUEST-NUM,1
?L16:	ICALL1 NEW-CURSOR
	JUMP ?L5
?L13:	EQUAL? CHR,13,10,132 \?L5
	ICALL1 PICK-QUESTION
?L6:	ZERO? Q /?L0
	CLEAR -1
	ICALL1 INIT-STATUS-LINE
	CRLF
	PRINTI "Back to the story..."
	CRLF
	RETURN 2

	.FUNCT PICK-QUESTION,CHR,MAXQ,Q
?L0:	SET 'Q,0
	ICALL2 INIT-HINT-SCREEN,0
	ICALL LEFT-LINE,3,STR?166
	ICALL RIGHT-LINE,3,STR?167,13
	GET HINTS,CHAPT-NUM >STACK
	GET STACK,0 >STACK
	SUB STACK,1 >MAXQ
	CURSET 5,1
	ICALL1 PUT-UP-QUESTIONS
	SUB QUEST-NUM,1 >CUR-POS
	ICALL1 NEW-CURSOR
?L1:	INPUT 1 >CHR
	EQUAL? CHR,81,113,131 \?L3
	SET 'Q,1
	JUMP ?L2
?L3:	EQUAL? CHR,78,110,130 \?L5
	ICALL1 ERASE-CURSOR
	EQUAL? QUEST-NUM,MAXQ \?L6
	SET 'CUR-POS,0
	SET 'QUEST-NUM,1
	JUMP ?L8
?L6:	INC 'CUR-POS
	INC 'QUEST-NUM
?L8:	ICALL1 NEW-CURSOR
	JUMP ?L1
?L5:	EQUAL? CHR,80,112,129 \?L9
	ICALL1 ERASE-CURSOR
	EQUAL? QUEST-NUM,1 \?L10
	SET 'QUEST-NUM,MAXQ
	SUB QUEST-NUM,1 >CUR-POS
	JUMP ?L12
?L10:	DEC 'CUR-POS
	DEC 'QUEST-NUM
?L12:	ICALL1 NEW-CURSOR
	JUMP ?L1
?L9:	EQUAL? CHR,13,10,132 \?L1
	ICALL1 DISPLAY-HINT
?L2:	ZERO? Q /?L0
	RFALSE

	.FUNCT ERASE-CURSOR
	GET COLUMN-TABLE,CUR-POS >STACK
	SUB STACK,2 >STACK
	GET LINE-TABLE,CUR-POS >STACK
	CURSET STACK,STACK
	PRINTI " "
	RTRUE

	.FUNCT NEW-CURSOR
	GET COLUMN-TABLE,CUR-POS >STACK
	SUB STACK,2 >STACK
	GET LINE-TABLE,CUR-POS >STACK
	CURSET STACK,STACK
	PRINTI ">"
	RTRUE

	.FUNCT INVERSE-LINE,CENTER-HALF
	SET 'CENTER-HALF,0
	HLIGHT H-INVERSE
	GETB 0,33 >STACK
	ICALL2 PRINT-SPACES,STACK
	HLIGHT H-NORMAL
	RTRUE

	.FUNCT DISPLAY-HINT,H,MX,MXC,CNT,CHR,FLG,N
	SET 'CNT,2
	SET 'FLG,1
	CLEAR -1
	SPLIT 3
	SCREEN S-WINDOW
	CURSET 1,1
	ICALL1 INVERSE-LINE
	ICALL CENTER-LINE,1,STR?168,16
	CURSET 3,1
	ICALL1 INVERSE-LINE
	ICALL LEFT-LINE,3,STR?166
	ICALL RIGHT-LINE,3,STR?169,17
	CURSET 2,1
	ICALL1 INVERSE-LINE
	HLIGHT H-BOLD
	ADD QUEST-NUM,1 >STACK
	GET HINTS,CHAPT-NUM >STACK
	GET STACK,STACK >H
	GET H,2 >STACK
	ICALL CENTER-LINE,2,STACK
	HLIGHT H-NORMAL
	GET H,0 >MX
	GET HINTS,0 >MXC
	SCREEN S-TEXT
	CRLF
?L1:	GET H,1 >STACK
	EQUAL? CNT,STACK /?L2
	GET H,CNT >STACK
	PRINT STACK
	CRLF
	INC 'CNT
	JUMP ?L1
?L2:	ZERO? FLG /?L10
	GRTR? CNT,MX \?L8
	SET 'FLG,0
	PRINTI "[That's all.]"
	CRLF
	JUMP ?L10
?L8:	ZERO? FLG /?L10
	SUB MX,CNT >STACK
	ADD STACK,1 >N
	EQUAL? CHAPT-NUM,MXC /?L11
	PRINTN N
	PRINTI " hint"
	EQUAL? N,1 /?L13
	PRINTI "s"
?L13:	PRINTI " left "
?L11:	PRINTI "-> "
	SET 'FLG,0
?L10:	INPUT 1 >CHR
	EQUAL? CHR,81,113,131 \?L18
	PUT H,1,CNT
	RTRUE
?L18:	EQUAL? CHR,13,10 \?L2
	GRTR? CNT,MX /?L2
	SET 'FLG,1
	GET H,CNT >STACK
	PRINT STACK
	CRLF
	IGRTR? 'CNT,MX \?L2
	SET 'FLG,0
	PRINTI "[That's all.]"
	CRLF
	JUMP ?L2

	.FUNCT PUT-UP-QUESTIONS,ST,MXQ,MXL
	SET 'ST,1
	GET HINTS,CHAPT-NUM >STACK
	GET STACK,0 >STACK
	SUB STACK,1 >MXQ
	GETB 0,32 >STACK
	SUB STACK,1 >MXL
?L1:	GRTR? ST,MXQ /TRUE
	SUB ST,1 >STACK
	GET COLUMN-TABLE,STACK >STACK
	DEC 'STACK
	SUB ST,1 >STACK
	GET LINE-TABLE,STACK >STACK
	CURSET STACK,STACK
	PRINTI " "
	ADD ST,1 >STACK
	GET HINTS,CHAPT-NUM >STACK
	GET STACK,STACK >STACK
	GET STACK,2 >STACK
	PRINT STACK
	INC 'ST
	JUMP ?L1

	.FUNCT PUT-UP-CHAPTERS,ST,MXC,MXL
	SET 'ST,1
	GET HINTS,0 >MXC
	GETB 0,32 >STACK
	SUB STACK,1 >MXL
?L1:	GRTR? ST,MXC /TRUE
	SUB ST,1 >STACK
	GET COLUMN-TABLE,STACK >STACK
	DEC 'STACK
	SUB ST,1 >STACK
	GET LINE-TABLE,STACK >STACK
	CURSET STACK,STACK
	PRINTI " "
	GET HINTS,ST >STACK
	GET STACK,1 >STACK
	PRINT STACK
	INC 'ST
	JUMP ?L1

	.FUNCT INIT-HINT-SCREEN,THIRD
	ASSIGNED? 'THIRD /?L4
	SET 'THIRD,1
?L4:	CLEAR -1
	GETB 0,32 >STACK
	DEC 'STACK
	SPLIT STACK
	SCREEN S-WINDOW
	CURSET 1,1
	ICALL1 INVERSE-LINE
	CURSET 2,1
	ICALL1 INVERSE-LINE
	CURSET 3,1
	ICALL1 INVERSE-LINE
	ICALL CENTER-LINE,1,STR?168,16
	ICALL LEFT-LINE,2,STR?170
	ICALL RIGHT-LINE,2,STR?171,12
	ZERO? THIRD /FALSE
	ICALL LEFT-LINE,3,STR?172
	CALL RIGHT-LINE,3,STR?173,16 >STACK
	RSTACK

	.FUNCT CENTER-LINE,LN,STR,LEN,INV
	ASSIGNED? 'LEN /?L10
	SET 'LEN,0
?L10:	ASSIGNED? 'INV /?L11
	SET 'INV,1
?L11:	ZERO? LEN \?L1
	DIROUT D-TABLE-ON,DIROUT-TBL
	PRINT STR
	DIROUT D-TABLE-OFF
	GET DIROUT-TBL,0 >LEN
?L1:	GETB 0,33 >STACK
	SUB STACK,LEN >STACK
	DIV STACK,2 >STACK
	INC 'STACK
	CURSET LN,STACK
	ZERO? INV /?L4
	HLIGHT H-INVERSE
?L4:	PRINT STR
	ZERO? INV /FALSE
	HLIGHT H-NORMAL
	RTRUE

	.FUNCT LEFT-LINE,LN,STR,INV
	ASSIGNED? 'INV /?L7
	SET 'INV,1
?L7:	CURSET LN,1
	ZERO? INV /?L1
	HLIGHT H-INVERSE
?L1:	PRINT STR
	ZERO? INV /FALSE
	HLIGHT H-NORMAL
	RTRUE

	.FUNCT RIGHT-LINE,LN,STR,LEN,INV
	ASSIGNED? 'LEN /?L10
	SET 'LEN,0
?L10:	ASSIGNED? 'INV /?L11
	SET 'INV,1
?L11:	ZERO? LEN \?L1
	DIROUT 3,DIROUT-TBL
	PRINT STR
	DIROUT -3
	GET DIROUT-TBL,0 >LEN
?L1:	GETB 0,33 >STACK
	SUB STACK,LEN >STACK
	CURSET LN,STACK
	ZERO? INV /?L4
	HLIGHT H-INVERSE
?L4:	PRINT STR
	ZERO? INV /FALSE
	HLIGHT H-NORMAL
	RTRUE

	.FUNCT CLOAK-F
	EQUAL? PRSA,V?EXAMINE,V?SEARCH \FALSE
	ZERO? 13-CLOAK-FLAG /?L3
	PRINT MESSAGE-000
	CRLF
	RTRUE
?L3:	PRINT MESSAGE-036
	CRLF
	MOVE 06-COIN,HERE
	SET '13-CLOAK-FLAG,1
	ICALL2 THIS-IS-IT,06-COIN
	RTRUE

	.FUNCT SPOON-IN-MUFFIN-F
	EQUAL? PRSA,V?TAKE \FALSE
	IN? 03-MUFFIN-WITH-SPOON,HERE \FALSE
	PRINT MESSAGE-003
	CRLF
	RTRUE

	.FUNCT NOTE-F
	EQUAL? PRSA,V?EXAMINE,V?READ \FALSE
	PRINTI "The note reads:"
	CRLF
	ICALL1 FIXED-FONT-ON
	PRINT MESSAGE-035
	CRLF
	ICALL1 FIXED-FONT-OFF
	RTRUE

	.FUNCT GIFT-SHOP-F,RARG
	EQUAL? PRSA,V?BUY \FALSE
	EQUAL? RARG,M-BEG \FALSE
	EQUAL? PRSO,08-ADVENTURE-KIT /?L5
	EQUAL? PRSO,15-SHOVEL \?L3
?L5:	CALL2 HELD?,12-MONEY >STACK
	ZERO? STACK /?L3
	PRINT MESSAGE-042
	CRLF
	RTRUE
?L3:	EQUAL? PRSO,08-ADVENTURE-KIT /?L9
	EQUAL? PRSO,15-SHOVEL \?L7
?L9:	CALL2 HELD?,06-COIN >STACK
	ZERO? STACK /?L7
	PRINT MESSAGE-043
	CRLF
	MOVE 06-COIN,LOCAL-GLOBALS
	MOVE PRSO,PLAYER
	FCLEAR PRSO,NDESCBIT
	FSET PRSO,TAKEBIT
	RTRUE
?L7:	EQUAL? PRSO,13-BEAM,14-CAN /?L13
	EQUAL? PRSO,16-WRENCH \?L11
?L13:	CALL2 HELD?,06-COIN >STACK
	ZERO? STACK /?L11
	PRINT MESSAGE-041
	CRLF
	RTRUE
?L11:	EQUAL? PRSO,13-BEAM,14-CAN /?L17
	EQUAL? PRSO,16-WRENCH \FALSE
?L17:	CALL2 HELD?,12-MONEY >STACK
	ZERO? STACK /FALSE
	PRINT MESSAGE-043
	CRLF
	MOVE 12-MONEY,LOCAL-GLOBALS
	MOVE PRSO,PLAYER
	FCLEAR PRSO,NDESCBIT
	FSET PRSO,TAKEBIT
	RTRUE

	.FUNCT LIBRARY-EXIT
	IN? 17-SECRET-PASSAGE,HERE \?L1
	RETURN 36-NORTH-EAST-PASSAGE
?L1:	PRINT SYSMESSAGE-007
	CRLF
	RFALSE

	.FUNCT BOOKCASE-F
	EQUAL? PRSA,V?EXAMINE,V?SEARCH \FALSE
	PRINT MESSAGE-021
	CRLF
	MOVE TINY-BUTTON,HERE
	RTRUE

	.FUNCT LEAFLET-F
	EQUAL? PRSA,V?EXAMINE,V?READ \?L1
	PRINT MESSAGE-033
	CRLF
	PRINT MESSAGE-034
	CRLF
	RTRUE
?L1:	EQUAL? PRSA,V?TAKE \FALSE
	PRINT MESSAGE-029
	CRLF
	RTRUE

	.FUNCT TINY-BUTTON-F
	EQUAL? PRSA,V?PUSH \?L5
	LOC 17-SECRET-PASSAGE >STACK
	EQUAL? STACK,HERE /?L3
	PRINT MESSAGE-069
	CRLF
	MOVE 17-SECRET-PASSAGE,HERE
	RTRUE
?L3:	PRINT MESSAGE-083
	CRLF
	RTRUE
?L5:	CALL1 STANDARD-F >STACK
	RSTACK

	.FUNCT GRANDFATHER-CLOCK-F
	EQUAL? PRSA,V?WALK,V?ENTER \?L1
	ICALL2 DO-WALK,P?IN
	RTRUE
?L1:	CALL1 STANDARD-F >STACK
	RSTACK

	.FUNCT RED-BUTTON-1-F
	EQUAL? PRSA,V?PUSH \?L1
	PRINT MESSAGE-038
	CRLF
	MOVE PLAYER,52-GRANDFATHER-CLOCK
	FSET 52-GRANDFATHER-CLOCK,TOUCHBIT
	RTRUE
?L1:	CALL1 STANDARD-F >STACK
	RSTACK

	.FUNCT STONE-DOOR-F
	EQUAL? PRSA,V?OPEN \?L1
	ZERO? 18-RIDDLE-FLAG \?L3
	PRINT MESSAGE-045
	CRLF
	RTRUE
?L3:	PRINTR "The door is already open."
?L1:	EQUAL? PRSA,V?CLOSE \?L7
	ZERO? 18-RIDDLE-FLAG \?L9
	PRINTR "The door is already closed."
?L9:	PRINT SYSMESSAGE-008
	CRLF
	RTRUE
?L7:	CALL1 STANDARD-F >STACK
	RSTACK

	.FUNCT ENTRY-HALL-F,RARG
	EQUAL? RARG,M-END \FALSE
	CALL HELD?,05-SPOON,PLAYER >STACK
	ZERO? STACK \FALSE
	CRLF
	PRINT MESSAGE-047
	CRLF
	MOVE 05-SPOON,PLAYER
	MOVE 03-MUFFIN-WITH-SPOON,LOCAL-GLOBALS
	MOVE 04-MUFFIN,03-JUNCTION
	CALL2 THIS-IS-IT,05-SPOON >STACK
	RSTACK

	.FUNCT LABORATORY-F,RARG
	EQUAL? RARG,M-END \FALSE
	CALL2 HELD?,05-SPOON >STACK
	ZERO? STACK /FALSE
	ZERO? 16-ROSETTA-FLAG \FALSE
	CRLF
	PRINT MESSAGE-048
	CRLF
	MOVE 22-ROSETTE,HERE
	ICALL2 THIS-IS-IT,22-ROSETTE
	SET '16-ROSETTA-FLAG,1
	RETURN 16-ROSETTA-FLAG

	.FUNCT SOFT-RUG-F
	EQUAL? PRSA,V?EXAMINE,V?SEARCH \?L1
	ZERO? 15-SOFT-RUG-FLAG \?L1
	PRINT MESSAGE-039
	CRLF
	MOVE 24-VELVET-CUSHION,HERE
	ICALL2 THIS-IS-IT,24-VELVET-CUSHION
	SET '15-SOFT-RUG-FLAG,1
	ZERO? SCORE-GET-VELVET-FLAG \TRUE
	ADD SCORE,10 >SCORE
	SET 'SCORE-GET-VELVET-FLAG,1
	RTRUE
?L1:	CALL1 STANDARD-F >STACK
	RSTACK

	.FUNCT LEVER-F
	EQUAL? PRSA,V?PULL \?L1
	PRINT MESSAGE-063
	CRLF
	CRLF
	ICALL2 GOTO,50-CANYON-BOTTOM-SOUTH
	RTRUE
?L1:	CALL2 JIGS-UP,MESSAGE-064 >STACK
	RSTACK

	.FUNCT CERISE-DOOR-ROOM-EXIT
	IN? 36-MIDGET,HERE /?L1
	RETURN 34-JELL-O-ROOM
?L1:	PRINT MESSAGE-067
	CRLF
	RFALSE

	.FUNCT JELL-O-F
	EQUAL? PRSA,V?EXAMINE,V?SEARCH \?L1
	ZERO? 14-JELL-O-FLAG \?L1
	PRINT MESSAGE-037
	CRLF
	MOVE 34-DWARF-SKELETON,HERE
	SET '14-JELL-O-FLAG,1
	RTRUE
?L1:	EQUAL? PRSA,V?EAT \?L4
	PRINT MESSAGE-096
	CRLF
	RTRUE
?L4:	CALL1 STANDARD-F >STACK
	RSTACK

	.FUNCT KEBABERUS-EXIT
	IN? 30-KEBABERUS,HERE /?L1
	RETURN 39-ODDLY-ANGLED-ROOM
?L1:	PRINT MESSAGE-066
	CRLF
	RFALSE

	.FUNCT MAZE-F
	EQUAL? PRSA,V?EXAMINE \FALSE
	PRINT MESSAGE-094
	CRLF
	RTRUE

	.FUNCT CAVE-EXIT
	IN? 41-WORMHOLE,HERE \?L1
	RETURN 51-XYZZY-ROOM
?L1:	PRINT SYSMESSAGE-007
	CRLF
	RFALSE

	.FUNCT FURS-F
	EQUAL? PRSA,V?EXAMINE,V?SEARCH \FALSE
	LOC 41-WORMHOLE >STACK
	EQUAL? STACK,HERE \?L3
	PRINT MESSAGE-032
	CRLF
	RTRUE
?L3:	PRINT MESSAGE-031
	CRLF
	MOVE 41-WORMHOLE,HERE
	RTRUE

	.FUNCT RED-BUTTON-2-F
	EQUAL? PRSA,V?PUSH \?L1
	PRINT MESSAGE-038
	CRLF
	MOVE PLAYER,09-GRANDFATHER-CLOCK
	FSET 09-GRANDFATHER-CLOCK,TOUCHBIT
	RTRUE
?L1:	CALL1 STANDARD-F >STACK
	RSTACK

	.FUNCT BRICK-BUILDING-F,RARG
	EQUAL? RARG,M-END \?L1
	LOC 40-THING-FISH >STACK
	EQUAL? STACK,HERE /?L1
	CRLF
	PRINT MESSAGE-072
	CRLF
	MOVE 40-THING-FISH,HERE
	RTRUE
?L1:	EQUAL? RARG,M-BEG \FALSE
	EQUAL? PRSA,V?LOOK-UP \FALSE
	PRINT MESSAGE-074
	CRLF
	RTRUE

	.FUNCT L9-ROOM-F,RARG
	EQUAL? RARG,M-END \FALSE
	ZERO? 17-L9-FLAG \FALSE
	CALL2 HELD?,09-SWORD >STACK
	ZERO? STACK /FALSE
	CALL2 HELD?,10-LANTERN >STACK
	ZERO? STACK /FALSE
	CALL2 HELD?,11-BOTTLE >STACK
	ZERO? STACK /FALSE
	CRLF
	PRINT MESSAGE-049
	CRLF
	SET '17-L9-FLAG,1
	MOVE 12-MONEY,PLAYER
	ZERO? SCORE-PETE-AUSTIN-FLAG \TRUE
	ADD SCORE,10 >SCORE
	SET 'SCORE-PETE-AUSTIN-FLAG,1
	RTRUE

	.FUNCT CUPCAKE-F
	EQUAL? PRSA,V?SAY,V?TELL-ABOUT \?L1
	ZERO? 18-RIDDLE-FLAG \FALSE
	LOC PLAYER >STACK
	EQUAL? STACK,14-RIDDLE-ROOM \FALSE
	PRINT MESSAGE-053
	CRLF
	SET '18-RIDDLE-FLAG,1
	RTRUE
?L1:	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT MATRESS-F
	EQUAL? PRSA,V?SAY,V?TELL-ABOUT \?L1
	IN? 25-MR-LAMBERTH,HERE \FALSE
	PRINT MESSAGE-077
	CRLF
	MOVE 25-MR-LAMBERTH,LOCAL-GLOBALS
	MOVE 26-MR-LAMBERTH-WITH-BUCKET,HERE
	ZERO? SCORE-GET-SATIN-FLAG \TRUE
	ADD SCORE,10 >SCORE
	SET 'SCORE-GET-SATIN-FLAG,1
	RTRUE
?L1:	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT CROOK-F
	EQUAL? PRSA,V?SAY,V?TELL-ABOUT \?L1
	EQUAL? HERE,35-HUGE-DOOR-ROOM \FALSE
	ZERO? SCORE-SOLVE-GAME-FLAG \?L5
	ADD SCORE,10 >SCORE
	SET 'SCORE-SOLVE-GAME-FLAG,1
?L5:	ICALL2 JIGS-UP,MESSAGE-081
	RTRUE
?L1:	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT XYZZY-F
	EQUAL? PRSA,V?SAY,V?TELL-ABOUT \?L1
	LOC PLAYER >STACK
	EQUAL? STACK,51-XYZZY-ROOM \?L3
	ICALL2 GOTO,53-IN-BRICK-BUILDING
	RTRUE
?L3:	LOC PLAYER >STACK
	EQUAL? STACK,53-IN-BRICK-BUILDING \FALSE
	ICALL2 GOTO,51-XYZZY-ROOM
	RTRUE
?L1:	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT PLUGH-F
	EQUAL? PRSA,V?SAY,V?TELL-ABOUT \?L1
	LOC 40-THING-FISH >STACK
	EQUAL? STACK,HERE \FALSE
	PRINT MESSAGE-101
	CRLF
	RTRUE
?L1:	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT GNOME-F
	EQUAL? PRSA,V?TELL \?L1
	PRINT MESSAGE-093
	CRLF
	SET 'P-CONT,-1
	RTRUE
?L1:	EQUAL? PRSA,V?WAKE \FALSE
	EQUAL? PLAYER,WINNER \FALSE
	PRINT MESSAGE-076
	CRLF
	RTRUE

	.FUNCT MUFFIN-MAN-F
	EQUAL? PRSA,V?TELL \FALSE
	PRINT MESSAGE-093
	CRLF
	SET 'P-CONT,-1
	RTRUE

	.FUNCT PETER-AUSTIN-F
	EQUAL? PRSA,V?TELL \FALSE
	PRINT MESSAGE-091
	CRLF
	SET 'P-CONT,-1
	RTRUE

	.FUNCT OGRE-F
	EQUAL? PRSA,V?TELL \FALSE
	PRINT MESSAGE-093
	CRLF
	SET 'P-CONT,-1
	RTRUE

	.FUNCT RANCE-F
	EQUAL? PRSA,V?TELL,V?TELL-ABOUT \FALSE
	PRINT MESSAGE-093
	CRLF
	SET 'P-CONT,-1
	RTRUE

	.FUNCT LINE-F
	EQUAL? PRSA,V?MAKE-LINE \FALSE
	CALL2 HELD?,18-PENCIL >STACK
	ZERO? STACK /FALSE
	EQUAL? HERE,05-MAP-ROOM \FALSE
	PRINT MESSAGE-054
	CRLF
	RTRUE

	.FUNCT POTATOES-F
	EQUAL? PRSA,V?EAT \FALSE
	PRINT MESSAGE-102
	CRLF
	MOVE PRSO,LOCAL-GLOBALS
	RTRUE

	.FUNCT SPOON-F
	EQUAL? PRSA,V?INSERT \?L1
	LOC 04-MUFFIN >STACK
	EQUAL? STACK,HERE \?L1
	MOVE 05-SPOON,LOCAL-GLOBALS
	MOVE 04-MUFFIN,LOCAL-GLOBALS
	MOVE 03-MUFFIN-WITH-SPOON,HERE
	PRINT MESSAGE-103
	CRLF
?L1:	EQUAL? PRSA,V?DROP \FALSE
	EQUAL? HERE,17-ENTRY-HALL \FALSE
	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT ADVENTURE-KIT-F
	EQUAL? PRSA,V?OPEN \FALSE
	CALL2 HELD?,08-ADVENTURE-KIT >STACK
	ZERO? STACK /FALSE
	PRINT MESSAGE-044
	CRLF
	MOVE 09-SWORD,HERE
	MOVE 10-LANTERN,HERE
	MOVE 11-BOTTLE,HERE
	MOVE 08-ADVENTURE-KIT,LOCAL-GLOBALS
	RTRUE

	.FUNCT BEAM-F
	EQUAL? PRSA,V?DROP \FALSE
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /FALSE
	EQUAL? HERE,23-SMALL-CHAMBER \FALSE
	MOVE 13-BEAM,LOCAL-GLOBALS
	MOVE 23-BEAM-ACROSS-OPENING,HERE
	MOVE 28-BEAM-VISIBLE-THROUGH-HOLE,27-NARROW-LEDGE-MIDDLE
	ICALL2 THIS-IS-IT,23-BEAM-ACROSS-OPENING
	PRINT MESSAGE-004
	CRLF
	RTRUE

	.FUNCT CAN-F
	EQUAL? PRSA,V?SPRAY \FALSE
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /FALSE
	PRINT MESSAGE-098
	CRLF
	MOVE 14-CAN,LOCAL-GLOBALS
	MOVE 42-REPELLENT,PLAYER
	RTRUE

	.FUNCT TIED-UP-WIZARD-F
	EQUAL? PRSA,V?UNTIE \FALSE
	PRINT MESSAGE-050
	CRLF
	MOVE 19-TIED-UP-WIZARD,LOCAL-GLOBALS
	FCLEAR 20-ROPE,NDESCBIT
	FSET 20-ROPE,TAKEBIT
	ICALL2 THIS-IS-IT,20-ROPE
	ZERO? SCORE-FREE-WIZARD-FLAG \FALSE
	ADD SCORE,10 >SCORE
	SET 'SCORE-FREE-WIZARD-FLAG,1
	RETURN SCORE-FREE-WIZARD-FLAG

	.FUNCT ROPE-F
	EQUAL? PRSA,V?UNTIE \?L1
	LOC 19-TIED-UP-WIZARD >STACK
	EQUAL? STACK,HERE \?L1
	ICALL1 TIED-UP-WIZARD-F
	RTRUE
?L1:	EQUAL? PRSA,V?TIE \?L4
	CALL2 HELD?,20-ROPE >STACK
	ZERO? STACK /?L4
	PRINTR "You don't need to do that, the rope is of the Theobaldian Auto-Knotting type."
?L4:	EQUAL? PRSA,V?THROW,V?THROW-AT \?L18
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /?L18
	LOC 28-BEAM-VISIBLE-THROUGH-HOLE >STACK
	EQUAL? STACK,HERE /?L9
	LOC 40-THING-FISH >STACK
	EQUAL? STACK,HERE /?L9
	PRINT MESSAGE-051
	CRLF
	RTRUE
?L9:	LOC 28-BEAM-VISIBLE-THROUGH-HOLE >STACK
	EQUAL? STACK,HERE \?L12
	PRINT MESSAGE-052
	CRLF
	CRLF
	MOVE 28-BEAM-VISIBLE-THROUGH-HOLE,LOCAL-GLOBALS
	MOVE 23-BEAM-ACROSS-OPENING,LOCAL-GLOBALS
	MOVE 38-BROKEN-BEAM,49-CANYON-BOTTOM-NORTH
	ICALL2 GOTO,28-NARROW-LEDGE
	ZERO? SCORE-NARROW-LEDGE-FLAG \TRUE
	ADD SCORE,10 >SCORE
	SET 'SCORE-NARROW-LEDGE-FLAG,1
	RTRUE
?L12:	LOC 40-THING-FISH >STACK
	EQUAL? STACK,HERE \?L18
	PRINT MESSAGE-073
	CRLF
	CRLF
	PRINT MESSAGE-075
	CRLF
	CRLF
	MOVE 20-ROPE,10-LOST-AND-FOUND
	MOVE 23-BEAM-ACROSS-OPENING,LOCAL-GLOBALS
	ICALL2 GOTO,08-LOBBY
	ZERO? SCORE-ESCAPE-BUILDING-FLAG \TRUE
	ADD SCORE,10 >SCORE
	SET 'SCORE-ESCAPE-BUILDING-FLAG,1
	RTRUE
?L18:	EQUAL? PRSA,V?GIVE \FALSE
	LOC 31-ZAPHOD >STACK
	EQUAL? STACK,HERE \FALSE
	CALL2 HELD?,20-ROPE >STACK
	ZERO? STACK /FALSE
	EQUAL? PRSI,31-ZAPHOD \FALSE
	PRINT MESSAGE-057
	CRLF
	MOVE 31-ZAPHOD,LOCAL-GLOBALS
	MOVE 20-ROPE,LOCAL-GLOBALS
	MOVE 29-RADIO,HERE
	FSET 29-RADIO,TAKEBIT
	FCLEAR 29-RADIO,NDESCBIT
	ICALL2 THIS-IS-IT,29-RADIO
	ZERO? SCORE-GET-RADIO-FLAG \TRUE
	ADD SCORE,10 >SCORE
	SET 'SCORE-GET-RADIO-FLAG,1
	RTRUE

	.FUNCT CAKE-F
	EQUAL? PRSA,V?EXAMINE,V?READ \?L1
	CALL2 HELD?,07-MAGNIFYING-GLASS >STACK
	ZERO? STACK /?L3
	PRINT MESSAGE-020
	CRLF
	RTRUE
?L3:	PRINT MESSAGE-019
	CRLF
	RTRUE
?L1:	EQUAL? PRSA,V?EAT \?L7
	ICALL2 JIGS-UP,MESSAGE-095
?L7:	EQUAL? PRSA,V?GIVE \FALSE
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /FALSE
	IN? 36-MIDGET,HERE \FALSE
	PRINT MESSAGE-070
	CRLF
	MOVE 36-MIDGET,LOCAL-GLOBALS
	MOVE 21-CAKE,LOCAL-GLOBALS
	SET '20-MIDGET-FLAG,1
	RETURN 20-MIDGET-FLAG

	.FUNCT ROSETTE-F
	EQUAL? PRSA,V?TIE,V?GIVE \FALSE
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /FALSE
	EQUAL? PRSI,30-KEBABERUS \FALSE
	LOC PRSI >STACK
	EQUAL? STACK,HERE \FALSE
	PRINT MESSAGE-056
	CRLF
	MOVE 22-ROSETTE,LOCAL-GLOBALS
	MOVE 30-KEBABERUS,LOCAL-GLOBALS
	RTRUE

	.FUNCT BEAM-ACROSS-OPENING-F
	EQUAL? PRSA,V?TAKE \FALSE
	EQUAL? HERE,23-SMALL-CHAMBER \FALSE
	MOVE 13-BEAM,PLAYER
	MOVE 23-BEAM-ACROSS-OPENING,LOCAL-GLOBALS
	MOVE 28-BEAM-VISIBLE-THROUGH-HOLE,LOCAL-GLOBALS
	ICALL2 THIS-IS-IT,13-BEAM
	PRINTI "You pick up "
	ICALL2 PRINT-DEF,13-BEAM
	PRINTR "."

	.FUNCT LAMBERTH-F
	EQUAL? PRSA,V?TELL,V?TELL-ABOUT \FALSE
	PRINT MESSAGE-093
	CRLF
	SET 'P-CONT,-1
	RTRUE

	.FUNCT SATIN-CUSHION-F
	EQUAL? PRSA,V?TAKE \FALSE
	IN? 25-MR-LAMBERTH,HERE \FALSE
	PRINT MESSAGE-005
	CRLF
	RTRUE

	.FUNCT RADIO-F
	EQUAL? PRSA,V?TAKE \?L1
	LOC 31-ZAPHOD >STACK
	EQUAL? STACK,HERE \?L1
	PRINT MESSAGE-006
	CRLF
	RTRUE
?L1:	EQUAL? PRSA,V?TURN-ON \FALSE
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /FALSE
	PRINT MESSAGE-059
	CRLF
	RTRUE

	.FUNCT ANGEL-F
	EQUAL? PRSA,V?TELL \FALSE
	PRINT MESSAGE-092
	CRLF
	SET 'P-CONT,-1
	RTRUE

	.FUNCT RADIO-WITH-BATTERY-F
	EQUAL? PRSA,V?TURN-ON \FALSE
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /FALSE
	PRINT MESSAGE-060
	CRLF
	MOVE 32-RADIO-WITH-BATTERY,LOCAL-GLOBALS
	MOVE 33-RADIO-MELLOW-YELLOW,PLAYER
	RTRUE

	.FUNCT RADIO-MELLOW-YELLOW-F
	EQUAL? PRSA,V?TURN-OFF \FALSE
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /FALSE
	PRINT MESSAGE-061
	CRLF
	MOVE 33-RADIO-MELLOW-YELLOW,LOCAL-GLOBALS
	MOVE 32-RADIO-WITH-BATTERY,PLAYER
	RTRUE

	.FUNCT DWARF-SKELETON-F
	EQUAL? PRSA,V?EXAMINE,V?SEARCH \?L1
	ZERO? 12-DWARF-SKELETON-FLAG \?L1
	PRINT MESSAGE-024
	CRLF
	MOVE 35-BATTERY,HERE
	SET '12-DWARF-SKELETON-FLAG,1
	ZERO? SCORE-BATTERY-FLAG \TRUE
	ADD SCORE,10 >SCORE
	SET 'SCORE-BATTERY-FLAG,1
	RTRUE
?L1:	CALL1 STANDARD-F >STACK
	RSTACK

	.FUNCT BATTERY-F
	EQUAL? PRSA,V?PUT-IN,V?INSERT \FALSE
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /FALSE
	CALL2 HELD?,PRSI >STACK
	ZERO? STACK /FALSE
	EQUAL? PRSI,29-RADIO \FALSE
	PRINT MESSAGE-058
	CRLF
	MOVE 29-RADIO,LOCAL-GLOBALS
	MOVE 35-BATTERY,LOCAL-GLOBALS
	MOVE 32-RADIO-WITH-BATTERY,PLAYER
	RTRUE

	.FUNCT MIDGET-F
	EQUAL? PRSA,V?TELL \FALSE
	PRINT MESSAGE-093
	CRLF
	SET 'P-CONT,-1
	RTRUE

	.FUNCT RED-BUTTON-F
	EQUAL? PRSA,V?PUSH \FALSE
	CALL2 HELD?,39-DEVICE >STACK
	ZERO? STACK /FALSE
	ZERO? 19-DEVICE-FLAG /?L3
	PRINT MESSAGE-068
	CRLF
	RTRUE
?L3:	SET '19-DEVICE-FLAG,1
	ICALL MOVE-INVENTORY,PLAYER,10-LOST-AND-FOUND
	CALL2 GOTO,08-LOBBY >STACK
	RSTACK

	.FUNCT MOVE-INVENTORY,SRC,DST,X,N
	FIRST? SRC >X /?L8
	RTRUE
?L1:	ZERO? X /TRUE
?L8:	NEXT? X >N /?L6
?L6:	MOVE X,DST
	SET 'X,N
	JUMP ?L1

	.FUNCT THING-FISH-F
	EQUAL? PRSA,V?TELL \FALSE
	PRINT MESSAGE-090
	CRLF
	SET 'P-CONT,-1
	RTRUE

	.FUNCT WORMHOLE-F
	EQUAL? PRSA,V?WALK,V?ENTER \FALSE
	ICALL2 DO-WALK,P?IN
	RTRUE

	.FUNCT REPELLENT-F
	EQUAL? PRSA,V?DROP,V?UNWEAR \FALSE
	CALL2 HELD?,PRSO >STACK
	ZERO? STACK /FALSE
	PRINT SYSMESSAGE-008
	CRLF
	RTRUE

	.FUNCT FIXED-FONT-ON
	GET 0,8 >STACK
	BOR STACK,2 >STACK
	PUT 0,8,STACK
	RTRUE

	.FUNCT FIXED-FONT-OFF
	GET 0,8 >STACK
	BAND STACK,-3 >STACK
	PUT 0,8,STACK
	RTRUE

	.FUNCT STANDARD-F
	EQUAL? PRSA,V?EXAMINE \FALSE
	ICALL1 V-EXAMINE
	RTRUE

	.FUNCT I-EVERY-TURN
	EQUAL? MOVES,1 \?L1
	CRLF
	PRINT MESSAGE-046
	CRLF
	RTRUE
?L1:	EQUAL? MOVES,3 \?L4
	CRLF
	PRINT MESSAGE-089
	CRLF
	RTRUE
?L4:	GRTR? MOVES,10 \?L7
	RANDOM 100 >STACK
	GRTR? STACK,8 /?L7
	LOC PLAYER >STACK
	EQUAL? STACK,51-XYZZY-ROOM,53-IN-BRICK-BUILDING /?L7
	CRLF
	PRINT MESSAGE-084
	CRLF
	CALL2 PICK-ONE-R,THING-FISH-ACTION >STACK
	PRINT STACK
	CRLF
	RTRUE
?L7:	RANDOM 100 >STACK
	GRTR? STACK,2 /?L10
	CRLF
	PRINT MESSAGE-097
	CRLF
	RTRUE
?L10:	RANDOM 100 >STACK
	GRTR? STACK,10 /?L13
	ZERO? 20-MIDGET-FLAG /?L13
	CRLF
	PRINT MESSAGE-071
	CRLF
	MOVE 37-POSTER,HERE
	SET '20-MIDGET-FLAG,0
	RTRUE
?L13:	CALL2 HELD?,39-DEVICE >STACK
	ZERO? STACK /?L16
	MOVE RED-BUTTON,HERE
	RTRUE
?L16:	MOVE RED-BUTTON,LOCAL-GLOBALS
	RTRUE

	.INSERT "werner2_str"
	.END
